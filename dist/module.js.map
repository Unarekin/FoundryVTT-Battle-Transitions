{
  "version": 3,
  "sources": ["../src/constants.ts", "../src/ScreenSpaceCanvasGroup.ts", "../src/errors/LocalizedError.ts", "../src/errors/CannotInitializeCanvasError.ts", "../src/errors/CanvasNotFoundError.ts", "../src/errors/InvalidDirectionError.ts", "../src/errors/InvalidElementError.ts", "../src/errors/InvalidMacroError.ts", "../src/errors/InvalidSceneError.ts", "../src/errors/InvalidTextureError.ts", "../src/errors/InvalidTransitionError.ts", "../src/errors/NoCoverElementError.ts", "../src/errors/NotInitializedError.ts", "../src/lib/simplex-noise.ts", "../src/utils.ts", "../src/coercion.ts", "../src/transitionUtils.ts", "../src/filters/default.frag", "../src/filters/default.vert", "../src/filters/CustomFilter.ts", "../src/filters/FireDissolve/firedissolve.frag", "../src/filters/FireDissolve/FireDissolveFilter.ts", "../src/filters/DiamondTransition/diamondtransition.frag", "../src/filters/DiamondTransition/DiamondTransitionFilter.ts", "../src/filters/TextureWipe/texturewipe.frag", "../src/filters/TextureWipe/TextureWipeFilter.ts", "../src/filters/FadeTransition/fadetransition.frag", "../src/TransitionChain.ts", "../src/filters/FadeTransition/FadeTransitionFilter.ts", "../src/filters/BilinearWipe/BilinearWipeFilter.ts", "../src/filters/LinearWipe/LinearWipeFilter.ts", "../src/filters/ClockWipe/ClockWipeFilter.ts", "../src/filters/SpotlightWipe/SpotlightWipeFilter.ts", "../src/filters/RadialWipe/RadialWipeFilter.ts", "../src/filters/ChromaKey/chromakey.frag", "../src/filters/ChromaKey/ChromaKeyFilter.ts", "../src/filters/TextureSwap/textureswap.frag", "../src/filters/TextureSwap/TextureSwapFilter.ts", "../src/filters/index.ts", "../src/BattleTransitions.ts", "../src/templates.ts", "../src/config/FadeConfigHandler.ts", "../src/config/LinearWipeConfigHandler.ts", "../src/config/BilinearWipeConfigHandler.ts", "../src/config/ChromaKeyConfigHandler.ts", "../src/config/ClockWipeConfigHandler.ts", "../src/config/DiamondTransitionConfigHandler.ts", "../src/config/FireDissolveConfigHandler.ts", "../src/config/RadialWipeConfigHandler.ts", "../src/config/SpotlightWipeConfigHandler.ts", "../src/config/TextureSwapConfigHandler.ts", "../src/config/WaitConfigHandler.ts", "../src/config/SoundConfigHandler.ts", "../src/config/VideoConfigHandler.ts", "../src/config/ConfigurationHandler.ts", "../src/module.ts"],
  "sourcesContent": ["export const COVER_ID = \"transition-cover\";\nexport const TRANSLATION_KEY = \"BATTLETRANSITIONS\";\n\nexport const CUSTOM_HOOKS = {\n  INITIALIZE: `${__MODULE_ID__}.init`,\n  TRANSITION_START: `${__MODULE_ID__}.transitionStart`,\n  TRANSITION_END: `${__MODULE_ID__}.transitionEnd`\n}\n\n", "export class ScreenSpaceCanvasGroup extends PIXI.Container {\n  protected setInverseMatrix() {\n    if (canvas?.app?.stage)\n      this.transform.setFromMatrix(canvas.app.stage.localTransform.clone().invert());\n  }\n\n  constructor() {\n    super();\n    this.interactiveChildren = false;\n    this.interactive = false;\n    this.eventMode = \"none\";\n\n    if (canvas?.app) {\n      canvas.app.renderer.addListener(\"prerender\", () => {\n        this.setInverseMatrix();\n      })\n    }\n  }\n}", "import { TRANSLATION_KEY } from \"../constants\";\n\nexport class LocalizedError extends Error {\n  constructor(message?: string, subs?: { [x: string]: unknown }) {\n    if (message) super((<Game>game).i18n?.format(`${TRANSLATION_KEY}.ERRORS.${message}`, subs))\n    else super();\n  }\n}", "import { LocalizedError } from \"./LocalizedError\";\n\nexport class CannotInitializeCanvasError extends LocalizedError {\n  constructor() {\n    super(\"CANNOTINITIALIZECANVAS\");\n  }\n}", "import { LocalizedError } from \"./LocalizedError\";\n\nexport class CanvasNotFoundError extends LocalizedError {\n  constructor() {\n    super(\"CANVASNOTFOUND\");\n  }\n}", "import { LocalizedError } from \"./LocalizedError\";\n\nexport class InvalidDirectionError extends LocalizedError {\n  constructor(direction: string) {\n    super(\"INVALIDDIRECTION\", { direction });\n  }\n}", "import { LocalizedError } from \"./LocalizedError\";\n\nexport class InvalidElementError extends LocalizedError {\n  constructor() {\n    super(\"INVALIDELEMENT\");\n  }\n}", "import { LocalizedError } from \"./LocalizedError\";\n\nexport class InvalidMacroError extends LocalizedError {\n  constructor(macro: string) {\n    super(\"INVALIDMACRO\", { macro });\n  }\n}", "import { LocalizedError } from \"./LocalizedError\";\n\nexport class InvalidSceneError extends LocalizedError {\n  constructor(name: string) {\n    super(\"INVALIDSCENE\", { name });\n  }\n}", "import { LocalizedError } from \"./LocalizedError\";\n\nexport class InvalidTextureError extends LocalizedError {\n  constructor() {\n    super(\"INVALIDTEXTURE\");\n  }\n}", "import { LocalizedError } from './LocalizedError';\nexport class InvalidTransitionError extends LocalizedError {\n  constructor(name: string) {\n    super(\"INVALIDTRANSITION\", { name });\n  }\n}", "import { LocalizedError } from \"./LocalizedError\";\n\nexport class NoCoverElementError extends LocalizedError {\n  constructor() {\n    super(\"NOCOVERELEMENT\");\n  }\n}", "import { LocalizedError } from \"./LocalizedError\";\n\nexport class NotInitializedError extends LocalizedError {\n  constructor() {\n    super(\"NOTINITIALIZED\");\n  }\n}", "/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n Copyright (c) 2024 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n\n\n// these __PURE__ comments help uglifyjs with dead code removal\n//\nconst SQRT3 = /*#__PURE__*/ Math.sqrt(3.0);\nconst SQRT5 = /*#__PURE__*/ Math.sqrt(5.0);\nconst F2 = 0.5 * (SQRT3 - 1.0);\nconst G2 = (3.0 - SQRT3) / 6.0;\nconst F3 = 1.0 / 3.0;\nconst G3 = 1.0 / 6.0;\nconst F4 = (SQRT5 - 1.0) / 4.0;\nconst G4 = (5.0 - SQRT5) / 20.0;\n\n// I'm really not sure why this | 0 (basically a coercion to int)\n// is making this faster but I get ~5 million ops/sec more on the\n// benchmarks across the board or a ~10% speedup.\nconst fastFloor = (x: number) => Math.floor(x) | 0;\n\nconst grad2 = /*#__PURE__*/ new Float64Array([1, 1,\n  -1, 1,\n  1, -1,\n\n  -1, -1,\n  1, 0,\n  -1, 0,\n\n  1, 0,\n  -1, 0,\n  0, 1,\n\n  0, -1,\n  0, 1,\n  0, -1]);\n\n// double seems to be faster than single or int's\n// probably because most operations are in double precision\nconst grad3 = /*#__PURE__*/ new Float64Array([1, 1, 0,\n  -1, 1, 0,\n  1, -1, 0,\n\n  -1, -1, 0,\n  1, 0, 1,\n  -1, 0, 1,\n\n  1, 0, -1,\n  -1, 0, -1,\n  0, 1, 1,\n\n  0, -1, 1,\n  0, 1, -1,\n  0, -1, -1]);\n\n// double is a bit quicker here as well\nconst grad4 = /*#__PURE__*/ new Float64Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n  0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n  1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n  -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n  1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n  -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n  1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n  -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]);\n\n/**\n * A random() function, must return a number in the interval [0,1), just like Math.random().\n */\nexport type RandomFn = () => number;\n\n/**\n * Samples the noise field in two dimensions\n * \n * Coordinates should be finite, bigger than -2^31 and smaller than 2^31.\n * @param x\n * @param y\n * @returns a number in the interval [-1, 1]\n */\nexport type NoiseFunction2D = (x: number, y: number) => number;\n\n/**\n * Creates a 2D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction2D}\n */\nexport function createNoise2D(random: RandomFn = Math.random): NoiseFunction2D {\n  const perm = buildPermutationTable(random);\n  // precalculating this yields a little ~3% performance improvement.\n  const permGrad2x = new Float64Array(perm).map(v => grad2[(v % 12) * 2]);\n  const permGrad2y = new Float64Array(perm).map(v => grad2[(v % 12) * 2 + 1]);\n  return function noise2D(x: number, y: number): number {\n    // if(!isFinite(x) || !isFinite(y)) return 0;\n    let n0 = 0; // Noise contributions from the three corners\n    let n1 = 0;\n    let n2 = 0;\n    // Skew the input space to determine which simplex cell we're in\n    const s = (x + y) * F2; // Hairy factor for 2D\n    const i = fastFloor(x + s);\n    const j = fastFloor(y + s);\n    const t = (i + j) * G2;\n    const X0 = i - t; // Unskew the cell origin back to (x,y) space\n    const Y0 = j - t;\n    const x0 = x - X0; // The x,y distances from the cell origin\n    const y0 = y - Y0;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if (x0 > y0) {\n      i1 = 1;\n      j1 = 0;\n    } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n    else {\n      i1 = 0;\n      j1 = 1;\n    } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    const x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    const y1 = y0 - j1 + G2;\n    const x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n    const y2 = y0 - 1.0 + 2.0 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    const ii = i & 255;\n    const jj = j & 255;\n    // Calculate the contribution from the three corners\n    let t0 = 0.5 - x0 * x0 - y0 * y0;\n    if (t0 >= 0) {\n      const gi0 = ii + perm[jj];\n      const g0x = permGrad2x[gi0];\n      const g0y = permGrad2y[gi0];\n      t0 *= t0;\n      // n0 = t0 * t0 * (grad2[gi0] * x0 + grad2[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      n0 = t0 * t0 * (g0x * x0 + g0y * y0);\n    }\n    let t1 = 0.5 - x1 * x1 - y1 * y1;\n    if (t1 >= 0) {\n      const gi1 = ii + i1 + perm[jj + j1];\n      const g1x = permGrad2x[gi1];\n      const g1y = permGrad2y[gi1];\n      t1 *= t1;\n      // n1 = t1 * t1 * (grad2[gi1] * x1 + grad2[gi1 + 1] * y1);\n      n1 = t1 * t1 * (g1x * x1 + g1y * y1);\n    }\n    let t2 = 0.5 - x2 * x2 - y2 * y2;\n    if (t2 >= 0) {\n      const gi2 = ii + 1 + perm[jj + 1];\n      const g2x = permGrad2x[gi2];\n      const g2y = permGrad2y[gi2];\n      t2 *= t2;\n      // n2 = t2 * t2 * (grad2[gi2] * x2 + grad2[gi2 + 1] * y2);\n      n2 = t2 * t2 * (g2x * x2 + g2y * y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70.0 * (n0 + n1 + n2);\n  };\n}\n\n/**\n * Samples the noise field in three dimensions\n * \n * Coordinates should be finite, bigger than -2^31 and smaller than 2^31.\n * @param x\n * @param y\n * @param z\n * @returns a number in the interval [-1, 1]\n */\nexport type NoiseFunction3D = (x: number, y: number, z: number) => number;\n\n/**\n * Creates a 3D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction3D}\n */\nexport function createNoise3D(random: RandomFn = Math.random): NoiseFunction3D {\n  const perm = buildPermutationTable(random);\n  // precalculating these seems to yield a speedup of over 15%\n  const permGrad3x = new Float64Array(perm).map(v => grad3[(v % 12) * 3]);\n  const permGrad3y = new Float64Array(perm).map(v => grad3[(v % 12) * 3 + 1]);\n  const permGrad3z = new Float64Array(perm).map(v => grad3[(v % 12) * 3 + 2]);\n  return function noise3D(x: number, y: number, z: number): number {\n    let n0, n1, n2, n3; // Noise contributions from the four corners\n    // Skew the input space to determine which simplex cell we're in\n    const s = (x + y + z) * F3; // Very nice and simple skew factor for 3D\n    const i = fastFloor(x + s);\n    const j = fastFloor(y + s);\n    const k = fastFloor(z + s);\n    const t = (i + j + k) * G3;\n    const X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n    const Y0 = j - t;\n    const Z0 = k - t;\n    const x0 = x - X0; // The x,y,z distances from the cell origin\n    const y0 = y - Y0;\n    const z0 = z - Z0;\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if (x0 >= y0) {\n      if (y0 >= z0) {\n        i1 = 1;\n        j1 = 0;\n        k1 = 0;\n        i2 = 1;\n        j2 = 1;\n        k2 = 0;\n      } // X Y Z order\n      else if (x0 >= z0) {\n        i1 = 1;\n        j1 = 0;\n        k1 = 0;\n        i2 = 1;\n        j2 = 0;\n        k2 = 1;\n      } // X Z Y order\n      else {\n        i1 = 0;\n        j1 = 0;\n        k1 = 1;\n        i2 = 1;\n        j2 = 0;\n        k2 = 1;\n      } // Z X Y order\n    }\n    else { // x0<y0\n      if (y0 < z0) {\n        i1 = 0;\n        j1 = 0;\n        k1 = 1;\n        i2 = 0;\n        j2 = 1;\n        k2 = 1;\n      } // Z Y X order\n      else if (x0 < z0) {\n        i1 = 0;\n        j1 = 1;\n        k1 = 0;\n        i2 = 0;\n        j2 = 1;\n        k2 = 1;\n      } // Y Z X order\n      else {\n        i1 = 0;\n        j1 = 1;\n        k1 = 0;\n        i2 = 1;\n        j2 = 1;\n        k2 = 0;\n      } // Y X Z order\n    }\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    const x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n    const y1 = y0 - j1 + G3;\n    const z1 = z0 - k1 + G3;\n    const x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n    const y2 = y0 - j2 + 2.0 * G3;\n    const z2 = z0 - k2 + 2.0 * G3;\n    const x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n    const y3 = y0 - 1.0 + 3.0 * G3;\n    const z3 = z0 - 1.0 + 3.0 * G3;\n    // Work out the hashed gradient indices of the four simplex corners\n    const ii = i & 255;\n    const jj = j & 255;\n    const kk = k & 255;\n    // Calculate the contribution from the four corners\n    let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n    if (t0 < 0) n0 = 0.0;\n    else {\n      const gi0 = ii + perm[jj + perm[kk]];\n      t0 *= t0;\n      n0 = t0 * t0 * (permGrad3x[gi0] * x0 + permGrad3y[gi0] * y0 + permGrad3z[gi0] * z0);\n    }\n    let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n    if (t1 < 0) n1 = 0.0;\n    else {\n      const gi1 = ii + i1 + perm[jj + j1 + perm[kk + k1]];\n      t1 *= t1;\n      n1 = t1 * t1 * (permGrad3x[gi1] * x1 + permGrad3y[gi1] * y1 + permGrad3z[gi1] * z1);\n    }\n    let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n    if (t2 < 0) n2 = 0.0;\n    else {\n      const gi2 = ii + i2 + perm[jj + j2 + perm[kk + k2]];\n      t2 *= t2;\n      n2 = t2 * t2 * (permGrad3x[gi2] * x2 + permGrad3y[gi2] * y2 + permGrad3z[gi2] * z2);\n    }\n    let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n    if (t3 < 0) n3 = 0.0;\n    else {\n      const gi3 = ii + 1 + perm[jj + 1 + perm[kk + 1]];\n      t3 *= t3;\n      n3 = t3 * t3 * (permGrad3x[gi3] * x3 + permGrad3y[gi3] * y3 + permGrad3z[gi3] * z3);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to stay just inside [-1,1]\n    return 32.0 * (n0 + n1 + n2 + n3);\n  };\n}\n\n/**\n * Samples the noise field in four dimensions\n * \n * Coordinates should be finite, bigger than -2^31 and smaller than 2^31.\n * @param x\n * @param y\n * @param z\n * @param w\n * @returns a number in the interval [-1, 1]\n */\nexport type NoiseFunction4D = (x: number, y: number, z: number, w: number) => number;\n\n/**\n * Creates a 4D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction4D}\n */\nexport function createNoise4D(random: RandomFn = Math.random): NoiseFunction4D {\n  const perm = buildPermutationTable(random);\n  // precalculating these leads to a ~10% speedup\n  const permGrad4x = new Float64Array(perm).map(v => grad4[(v % 32) * 4]);\n  const permGrad4y = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 1]);\n  const permGrad4z = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 2]);\n  const permGrad4w = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 3]);\n  return function noise4D(x: number, y: number, z: number, w: number): number {\n    let n0, n1, n2, n3, n4; // Noise contributions from the five corners\n    // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n    const s = (x + y + z + w) * F4; // Factor for 4D skewing\n    const i = fastFloor(x + s);\n    const j = fastFloor(y + s);\n    const k = fastFloor(z + s);\n    const l = fastFloor(w + s);\n    const t = (i + j + k + l) * G4; // Factor for 4D unskewing\n    const X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n    const Y0 = j - t;\n    const Z0 = k - t;\n    const W0 = l - t;\n    const x0 = x - X0; // The x,y,z,w distances from the cell origin\n    const y0 = y - Y0;\n    const z0 = z - Z0;\n    const w0 = w - W0;\n    // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n    // To find out which of the 24 possible simplices we're in, we need to\n    // determine the magnitude ordering of x0, y0, z0 and w0.\n    // Six pair-wise comparisons are performed between each possible pair\n    // of the four coordinates, and the results are used to rank the numbers.\n    let rankx = 0;\n    let ranky = 0;\n    let rankz = 0;\n    let rankw = 0;\n    if (x0 > y0) rankx++;\n    else ranky++;\n    if (x0 > z0) rankx++;\n    else rankz++;\n    if (x0 > w0) rankx++;\n    else rankw++;\n    if (y0 > z0) ranky++;\n    else rankz++;\n    if (y0 > w0) ranky++;\n    else rankw++;\n    if (z0 > w0) rankz++;\n    else rankw++;\n    // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n    // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n    // impossible. Only the 24 indices which have non-zero entries make any sense.\n    // We use a thresholding to set the coordinates in turn from the largest magnitude.\n    // Rank 3 denotes the largest coordinate.\n    // Rank 2 denotes the second largest coordinate.\n    // Rank 1 denotes the second smallest coordinate.\n\n    // The integer offsets for the second simplex corner\n    const i1 = rankx >= 3 ? 1 : 0;\n    const j1 = ranky >= 3 ? 1 : 0;\n    const k1 = rankz >= 3 ? 1 : 0;\n    const l1 = rankw >= 3 ? 1 : 0;\n    // The integer offsets for the third simplex corner\n    const i2 = rankx >= 2 ? 1 : 0;\n    const j2 = ranky >= 2 ? 1 : 0;\n    const k2 = rankz >= 2 ? 1 : 0;\n    const l2 = rankw >= 2 ? 1 : 0;\n\n    // The integer offsets for the fourth simplex corner\n    const i3 = rankx >= 1 ? 1 : 0;\n    const j3 = ranky >= 1 ? 1 : 0;\n    const k3 = rankz >= 1 ? 1 : 0;\n    const l3 = rankw >= 1 ? 1 : 0;\n    // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n    const x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n    const y1 = y0 - j1 + G4;\n    const z1 = z0 - k1 + G4;\n    const w1 = w0 - l1 + G4;\n    const x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n    const y2 = y0 - j2 + 2.0 * G4;\n    const z2 = z0 - k2 + 2.0 * G4;\n    const w2 = w0 - l2 + 2.0 * G4;\n    const x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n    const y3 = y0 - j3 + 3.0 * G4;\n    const z3 = z0 - k3 + 3.0 * G4;\n    const w3 = w0 - l3 + 3.0 * G4;\n    const x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n    const y4 = y0 - 1.0 + 4.0 * G4;\n    const z4 = z0 - 1.0 + 4.0 * G4;\n    const w4 = w0 - 1.0 + 4.0 * G4;\n    // Work out the hashed gradient indices of the five simplex corners\n    const ii = i & 255;\n    const jj = j & 255;\n    const kk = k & 255;\n    const ll = l & 255;\n    // Calculate the contribution from the five corners\n    let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n    if (t0 < 0) n0 = 0.0;\n    else {\n      const gi0 = ii + perm[jj + perm[kk + perm[ll]]];\n      t0 *= t0;\n      n0 = t0 * t0 * (permGrad4x[gi0] * x0 + permGrad4y[gi0] * y0 + permGrad4z[gi0] * z0 + permGrad4w[gi0] * w0);\n    }\n    let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n    if (t1 < 0) n1 = 0.0;\n    else {\n      const gi1 = ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]];\n      t1 *= t1;\n      n1 = t1 * t1 * (permGrad4x[gi1] * x1 + permGrad4y[gi1] * y1 + permGrad4z[gi1] * z1 + permGrad4w[gi1] * w1);\n    }\n    let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n    if (t2 < 0) n2 = 0.0;\n    else {\n      const gi2 = ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]];\n      t2 *= t2;\n      n2 = t2 * t2 * (permGrad4x[gi2] * x2 + permGrad4y[gi2] * y2 + permGrad4z[gi2] * z2 + permGrad4w[gi2] * w2);\n    }\n    let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n    if (t3 < 0) n3 = 0.0;\n    else {\n      const gi3 = ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]];\n      t3 *= t3;\n      n3 = t3 * t3 * (permGrad4x[gi3] * x3 + permGrad4y[gi3] * y3 + permGrad4z[gi3] * z3 + permGrad4w[gi3] * w3);\n    }\n    let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n    if (t4 < 0) n4 = 0.0;\n    else {\n      const gi4 = ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]];\n      t4 *= t4;\n      n4 = t4 * t4 * (permGrad4x[gi4] * x4 + permGrad4y[gi4] * y4 + permGrad4z[gi4] * z4 + permGrad4w[gi4] * w4);\n    }\n    // Sum up and scale the result to cover the range [-1,1]\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n  };\n}\n\n/**\n * Builds a random permutation table.\n * This is exported only for (internal) testing purposes.\n * Do not rely on this export.\n * @private\n */\nexport function buildPermutationTable(random: RandomFn): Uint8Array {\n  const tableSize = 512;\n  const p = new Uint8Array(tableSize);\n  for (let i = 0; i < tableSize / 2; i++) {\n    p[i] = i;\n  }\n  for (let i = 0; i < tableSize / 2 - 1; i++) {\n    const r = i + ~~(random() * (256 - i));\n    const aux = p[i];\n    p[i] = p[r];\n    p[r] = aux;\n  }\n  for (let i = 256; i < tableSize; i++) {\n    p[i] = p[i - 256];\n  }\n  return p;\n}", "import { CannotInitializeCanvasError, CanvasNotFoundError } from \"./errors\";\nimport { createNoise2D, RandomFn } from \"./lib/simplex-noise\"\nimport { ScreenSpaceCanvasGroup } from \"./ScreenSpaceCanvasGroup\";\n\n/**\n * Linearly interpolates between two values\n * @param {number} a Starting value\n * @param {number} b Ending value\n * @param {number} progress Relative distance through range, normalized\n * @returns \n */\nexport function lerp(a: number, b: number, progress: number) {\n  return a + progress * (b - progress);\n}\n\n\nexport function logImage(url: string, size = 256) {\n  const image = new Image();\n\n  image.onload = function () {\n    const style = [\n      `font-size: 1px`,\n      `padding: ${size}px`,\n      // `padding: ${this.height / 100 * size}px ${this.width / 100 * size}px`,\n      `background: url(${url}) no-repeat`,\n      `background-size:contain`,\n      `border:1px solid black`\n    ].join(\";\")\n    console.log('%c ', style);;\n  }\n\n  image.src = url;\n\n}\n\n\n/**\n * Generates a simplex noise texture\n * @param {number} [width=256]\n * @param {number} [height=256]\n * @param {RandomFn} random {@link RandomFn}\n * @returns \n */\nexport function createNoiseTexture(width: number = 256, height: number = 256, random?: RandomFn): PIXI.Texture {\n  const noise2D = createNoise2D(random);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) throw new CannotInitializeCanvasError();\n  canvas.width = width;\n  canvas.height = height;\n\n  const imageData = ctx.createImageData(canvas.width, canvas.height);\n  const data = imageData.data;\n\n  for (let y = 0; y < canvas.height; y++) {\n    for (let x = 0; x < canvas.width; x++) {\n      const value = noise2D(x / 32, y / 32);\n      const index = (y * canvas.width + x) * 4;\n      data[index] = value * 255;\n      data[index + 1] = value * 255;\n      data[index + 2] = value * 255;\n      data[index + 3] = 255;\n    }\n  }\n\n  ctx.putImageData(imageData, 0, 0);\n  return PIXI.Texture.from(canvas);\n}\n\n/**\n * Creates a 1-dimensional gradient by interpolating between r,g,b values of two colors\n * @param {number} size \n * @param {PIXI.Color} startColor {@link PIXI.Color}\n * @param {PIXI.Color} endColor {@link PIXI.Color}\n * @returns \n */\nexport function createGradient1DTexture(size: number, startColor?: PIXI.Color, endColor?: PIXI.Color): PIXI.Texture {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = size;\n  canvas.height = 1;\n\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) throw new CannotInitializeCanvasError();\n\n  const gradient = ctx.createLinearGradient(0, 0, size, 0);\n\n  const actualStart: PIXI.Color = (startColor ?? new PIXI.Color(\"white\"));\n  const actualEnd: PIXI.Color = endColor ?? new PIXI.Color(\"black\");\n\n  gradient.addColorStop(0, actualStart.toHex());\n  gradient.addColorStop(1, actualEnd.toHex());\n\n  ctx.fillStyle = gradient;\n  ctx.fillRect(0, 0, size, 1);\n\n\n  return PIXI.Texture.from(canvas);\n}\n\n\n/**\n * Generates a 1x1 {@link PIXI.Texture} with a given color\n * @param {PIXI.Color} color {@link PIXI.Color}\n * @returns \n */\nexport function createColorTexture(color: PIXI.ColorSource): PIXI.Texture {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = 1;\n  canvas.height = 1;\n\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) throw new CannotInitializeCanvasError();\n  const actualColor = new PIXI.Color(color);\n  ctx.fillStyle = actualColor.toHexa();\n  ctx.fillRect(0, 0, 1, 1);\n  return PIXI.Texture.from(canvas);\n}\n\n/**\n * Inverts a {@link PIXI.Texture}\n * @param {PIXI.Texture} texture {@link PIXI.Texture} to be inverted\n * @returns {PIXI.Texture} {@link PIXI.Texture}\n */\nexport function invertTexture(texture: PIXI.Texture): PIXI.Texture {\n  const extracted = canvas?.app?.renderer.extract.canvas(PIXI.Sprite.from(texture)) as HTMLCanvasElement;\n  if (!extracted) throw new CannotInitializeCanvasError();\n\n  const newCanvas = document.createElement(\"canvas\");\n  newCanvas.width = extracted.width;\n  newCanvas.height = extracted.height;\n  const ctx = newCanvas.getContext(\"2d\");\n  if (!ctx) throw new CannotInitializeCanvasError();\n  ctx.drawImage(extracted, 0, 0);\n  ctx.globalCompositeOperation = \"difference\";\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(0, 0, newCanvas.width, newCanvas.height);\n  return PIXI.Texture.from(newCanvas);\n}\n\n/**\n * Rotates a texture by a preset\n * @param {PIXI.Texture} texture {@link PIXI.Texture}\n * @param {number} rotation \n * @returns {PIXI.Texture} {@link PIXI.Texture}\n */\nexport function rotateTexture(texture: PIXI.Texture, rotation: number): PIXI.Texture {\n  const { frame } = texture;\n\n  const h = PIXI.groupD8.isVertical(rotation) ? texture.frame.width : texture.frame.height;\n  const w = PIXI.groupD8.isVertical(rotation) ? texture.frame.height : texture.frame.width;\n\n  const crop = new PIXI.Rectangle(texture.frame.x, texture.frame.y, w, h);\n  const trim = crop;\n\n  let rotated: PIXI.Texture;\n  if (rotation % 2 === 0) {\n    rotated = new PIXI.Texture(texture.baseTexture, frame, crop, trim, rotation);\n  } else {\n    rotated = new PIXI.Texture(texture.baseTexture, frame, crop, trim, rotation - 1);\n    rotated.rotate++;\n  }\n\n  return rotated;\n}\n\n/**\n * Quick wrapper to wait for a hook to get called\n * @param {string} hook The hook to await\n * @returns \n */\nexport async function awaitHook(hook: string): Promise<unknown[]> {\n  return new Promise<unknown[]>(resolve => {\n    Hooks.once(hook, (...args: unknown[]) => {\n      resolve(args);\n    })\n  })\n}\n\nexport function getCanvasGroup(): ScreenSpaceCanvasGroup | undefined {\n  return canvas?.stage?.children.find(child => child instanceof ScreenSpaceCanvasGroup);\n}\n\nexport function getCurrentOverlayObject(): PIXI.DisplayObject | undefined {\n  const canvasGroup = getCanvasGroup();\n  if (!canvasGroup) throw new CanvasNotFoundError();\n  if (canvasGroup.children.length === 0) return;\n  return canvasGroup.children[canvasGroup.children.length - 1];\n}\n\n\nexport function localize(key: string, data: Record<string, unknown> = {}): string {\n  return game.i18n?.format(key, data) ?? key;\n}\n\nexport function shouldUseAppV2(): boolean {\n\n  return game.release?.isNewer(\"12\") ?? false;\n}", "import { createColorTexture } from \"./utils\";\n\nexport function coerceColor(source: unknown): PIXI.Color | undefined {\n  try {\n    return new PIXI.Color(source as PIXI.ColorSource);\n  } catch { /* empty */ }\n}\n\nexport function coerceTexture(source: unknown): PIXI.Texture | undefined {\n  const color = coerceColor(source);\n  if (color) return createColorTexture(color);\n\n\n  // Attempt to get a texture directly\n  try {\n    return PIXI.Texture.from(source as PIXI.TextureSource);\n  } catch { /* empty */ }\n}\n\nexport function coerceScene(arg: unknown): Scene | undefined {\n  if (!((game instanceof Game) && game.scenes)) return;\n\n  if (typeof arg === \"string\") {\n    let scene = game.scenes.get(arg);\n    if (scene) return scene;\n    scene = game.scenes.getName(arg);\n    if (scene) return scene;\n  } else if (arg instanceof Scene) {\n    return arg;\n  }\n}\n\nexport function coerceMacro(id: string): Macro | undefined\nexport function coerceMacro(name: string): Macro | undefined\nexport function coerceMacro(uuid: string): Macro | undefined\nexport function coerceMacro(macro: Macro): Macro\nexport function coerceMacro(arg: unknown): Macro | undefined {\n  if (arg instanceof Macro) return arg;\n  if (!(game as Game).macros) return;\n\n  if (typeof arg === \"string\") {\n    let macro = (game as Game).macros?.get(arg);\n    if (macro) return macro;\n    macro = (game as Game).macros?.getName(arg);\n    if (macro) return macro;\n    if (arg.split(\".\")[0] === \"Macro\") return (game as Game).macros?.get(arg.split(\".\").slice(1).join(\".\"));\n  }\n}", "import { COVER_ID } from \"./constants\";\nimport { ScreenSpaceCanvasGroup } from './ScreenSpaceCanvasGroup';\nimport { CanvasNotFoundError, NotInitializedError, NoCoverElementError, InvalidSceneError, CannotInitializeCanvasError } from './errors';\nimport { awaitHook, createColorTexture } from \"./utils\";\nimport { TransitionStep } from \"./types\";\nimport { coerceScene } from \"./coercion\";\n\n\n\n// Create cover HTMLElement\nconst transitionCover = document.createElement(\"div\");\ntransitionCover.style.display = \"none\";\ntransitionCover.style.position = \"absolute\";\ntransitionCover.style.width = \"100%\";\ntransitionCover.style.height = \"100%\";\ntransitionCover.id = COVER_ID;\ndocument.body.appendChild(transitionCover);\n\nlet canvasGroup: ScreenSpaceCanvasGroup | null = null;\n\nexport function initializeCanvas() {\n  canvasGroup = new ScreenSpaceCanvasGroup();\n  canvas?.stage?.addChild(canvasGroup);\n}\n\nexport async function createSnapshot() {\n  if (!canvas) throw new CanvasNotFoundError();\n  if (!(canvas.app && canvas.hidden && canvas.primary && canvas.tiles && canvas.drawings && canvas.scene && canvas.stage)) throw new NotInitializedError();\n\n  const { sceneWidth, sceneHeight } = canvas.scene.dimensions;\n\n  const renderer = canvas.app.renderer;\n\n  const rt = PIXI.RenderTexture.create({ width: sceneWidth, height: sceneHeight });\n  renderer.render(canvas.stage, { renderTexture: rt, skipUpdateTransform: true, clear: true });\n\n  const transitionCover = document.getElementById(COVER_ID) as HTMLImageElement | null;\n  if (!transitionCover) throw new NoCoverElementError();\n\n  transitionCover.style.backgroundImage = \"\";\n  const start = Date.now();\n  const img = await renderer.extract.image(rt);\n  // const img = renderer.extract.canvas(rt) as HTMLCanvasElement;\n  console.log(`Image transfered in ${Date.now() - start}ms`);\n  transitionCover.style.backgroundImage = `url(${img.src})`;\n  transitionCover.style.backgroundColor = renderer.background.backgroundColor.toHex()\n  transitionCover.style.display = \"block\";\n\n  const sprite = PIXI.Sprite.from(rt);\n  return sprite;\n}\n\nexport async function setupTransition(): Promise<PIXI.Container> {\n  if (!canvasGroup) throw new CannotInitializeCanvasError();\n  const snapshot = await createSnapshot();\n  const container = new PIXI.Container();\n\n  const bgTexture = createColorTexture(canvas?.app?.renderer.background.backgroundColor ?? \"white\");\n  container.addChild(new PIXI.Sprite(bgTexture));\n  container.addChild(snapshot);\n  canvasGroup.addChild(container);\n\n  return container;\n}\n\nexport function cleanupTransition(container: PIXI.DisplayObject) {\n  // Ensure our cover is hidden\n  transitionCover.style.display = \"none\";\n  transitionCover.style.backgroundImage = \"\";\n  if (Array.isArray(container.children) && container.children.length)\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    for (let i = container.children.length - 1; i >= 0; i--) container.children[i].destroy();\n  container.destroy();\n}\n\nexport function hideLoadingBar() {\n  const loadingBar = document.getElementById('loading');\n  if (loadingBar) loadingBar.style.opacity = \"0\";\n}\n\nexport function showLoadingBar() {\n  const loadingBar = document.getElementById(\"loading\");\n  if (loadingBar) loadingBar.style.removeProperty(\"opacity\");\n}\n\nexport function hideTransitionCover() {\n  transitionCover.style.display = \"none\";\n  transitionCover.style.removeProperty(\"backgroundImage\");\n}\n\nexport async function activateScene(name: string): Promise<Scene>\nexport async function activateScene(id: string): Promise<Scene>\nexport async function activateScene(uuid: string): Promise<Scene>\nexport async function activateScene(scene: Scene): Promise<Scene>\nexport async function activateScene(arg: unknown): Promise<Scene> {\n  const scene = coerceScene(arg);\n  if (!(scene instanceof Scene)) throw new InvalidSceneError(typeof arg === \"string\" ? arg : \"[Object object]\");\n  void scene.activate();\n  await awaitHook(\"canvasReady\");\n  return scene;\n}\n\nexport async function transitionTo(name: string, callback: TransitionStep): Promise<void>\nexport async function transitionTo(scene: Scene, callback: TransitionStep): Promise<void>\nexport async function transitionTo(arg: string | Scene, callback: TransitionStep): Promise<void> {\n  const scene = typeof arg === \"string\" ? (game as Game).scenes?.getName(arg) : arg;\n  if (!scene) throw new InvalidSceneError(arg as string);\n\n  const container = await setupTransition();\n\n  // Hide loading bar for transition\n  hideLoadingBar();\n  await activateScene(scene);\n  showLoadingBar();\n  hideTransitionCover();\n\n  await callback(container);\n  cleanupTransition(container);\n}\n\n\nexport function removeFilter(element: PIXI.DisplayObject, filter: PIXI.Filter) {\n  if (Array.isArray(element.filters)) {\n    const index = element.filters.indexOf(filter);\n    if (index !== -1) element.filters.splice(index, 1);\n  }\n}", "precision highp float;\n\nuniform sampler2D uSampler;\nin vec2 vTextureCoord;\nout vec4 color;\n\nvoid main() {\n    color = texture(uSampler, vTextureCoord);\n}", "in vec2 aVertexPosition;\n\nuniform mat3 projectionMatrix;\n\nout vec2 vTextureCoord;\n\nuniform vec4 inputSize;\nuniform vec4 outputFrame;\n\nvec4 filterVertexPosition(void) {\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n    \n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n}\n\nvec2 filterTextureCoord(void) {\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\n}\n\nvoid main(void) {\n    gl_Position = filterVertexPosition();\n    vTextureCoord = filterTextureCoord();\n}\n", "import frag from \"./default.frag\";\nimport vert from \"./default.vert\"\n\nexport class CustomFilter<u extends { [x: string]: unknown }> extends PIXI.Filter {\n  constructor(vertex?: string, fragment?: string, uniforms?: u) {\n\n    super(vertex || vert, fragment || frag, uniforms);\n\n    // Enable GLSL 3.00\n    if (!this.program.fragmentSrc.includes(\"#version 300 es\"))\n      this.program.fragmentSrc = \"#version 300 es \\n\" + this.program.fragmentSrc;\n\n    if (!this.program.vertexSrc.includes(\"#version 300 es\"))\n      this.program.vertexSrc = \"#version 300 es\\n\" + this.program.vertexSrc;\n  }\n}\n", "precision highp float;\n\nin vec2 vTextureCoord;\nout vec4 color;\n\nuniform sampler2D uSampler;\nuniform sampler2D noise_texture;\nuniform sampler2D burn_texture;\n\nuniform float integrity;\nuniform float burn_size;\n\nfloat inverse_lerp(float a, float b, float v) {\n    return (v - a) / (b - a);\n}\n\nvoid main() {\n    float noise = texture(noise_texture, vTextureCoord).r * vTextureCoord.y;\n    vec4 base_color = texture(uSampler, vTextureCoord) * step(noise, integrity);\n    vec2 burn_uv = vec2(inverse_lerp(integrity, integrity * burn_size, noise), 0.0);\n    vec4 burn_color = texture(burn_texture, burn_uv) * step(noise, integrity * burn_size);\n    \n    color = mix(burn_color, base_color, base_color.a);\n    // color = texture(uSampler, vTextureCoord);\n}", "import { createGradient1DTexture, createNoiseTexture } from \"../../utils\";\nimport { CustomFilter } from \"../CustomFilter\";\nimport fragment from \"./firedissolve.frag\";\n// import { createGradient1DTexture, createNoiseTexture } from \"../../utils\"\n\ntype FireDissolveUniforms = {\n  noise_texture: PIXI.Texture;\n  burn_texture: PIXI.Texture;\n  integrity: number;\n  burn_size: number;\n}\n\nconst defaultBurnTexture = createGradient1DTexture(1024, new PIXI.Color(\"#ff0400\"), new PIXI.Color(\"#ffff01\"));\n\nexport class FireDissolveFilter extends CustomFilter<FireDissolveUniforms> {\n\n  constructor(burnTexture?: PIXI.TextureSource) {\n    const noise_texture = createNoiseTexture();\n    const uniforms = {\n      noise_texture,\n      integrity: 1,\n      burn_size: 1.3,\n      burn_texture: burnTexture ? PIXI.Texture.from(burnTexture) : defaultBurnTexture\n    }\n\n    super(undefined, fragment, uniforms);\n  }\n\n}", "precision highp float;\n\nuniform sampler2D uSampler;\nin vec2 vTextureCoord;\nout vec4 color;\n\nuniform float progress;\nuniform float size;\nuniform vec2 screen_size;\nuniform sampler2D bgSampler;\n\nvoid main() {\n    vec2 screenCoord = screen_size * vTextureCoord;\n    \n    float x = abs(fract(screenCoord.x / size) - 0.5);\n    float y = abs(fract(screenCoord.y / size) - 0.5);\n    \n    if (x + y + vTextureCoord.x > progress * 2.0) {\n        color = texture(uSampler, vTextureCoord);\n    } else {\n        color = texture(bgSampler, vTextureCoord);\n    }\n}", "import frag from \"./diamondtransition.frag\";\nimport { CustomFilter } from '../CustomFilter';\nimport { coerceTexture } from \"../../coercion\";\nimport { createColorTexture } from \"../../utils\";\n\ntype DiamondTransitionUniforms = {\n  progress: number;\n  size: number;\n  screen_size: { x: number; y: number },\n  bgSampler: PIXI.Texture\n}\n\nexport class DiamondTransitionFilter extends CustomFilter<DiamondTransitionUniforms> {\n\n  constructor(size: number, bg: PIXI.TextureSource | PIXI.ColorSource = \"transparent\") {\n    const bgTexture = coerceTexture(bg) ?? createColorTexture(\"transparent\");\n    super(undefined, frag, {\n      progress: 0,\n      size,\n      bgSampler: bgTexture,\n      screen_size: { x: window.innerWidth, y: window.innerHeight }\n    })\n  }\n}\n\n// export class DiamondTransitionFilter extends CustomFilter<DiamondTransitionUniforms> {\n//   constructor(uniforms?: Partial<DiamondTransitionUniforms>) {\n//     const actual: DiamondTransitionUniforms = {\n//       progress: 0,\n//       size: 40,\n//       fill: true,\n//       screen_size: {\n//         x: window.innerWidth,\n//         y: window.innerHeight\n//       },\n//       ...uniforms\n//     };\n\n//     super(undefined, frag, actual);\n//   }\n// }", "precision highp float;\n\nuniform sampler2D uSampler;\nin vec2 vTextureCoord;\nout vec4 color;\n\nuniform float progress;\nuniform sampler2D wipeSampler;\nuniform sampler2D bgSampler;\n\nvoid main() {\n    vec4 wipe = texture(wipeSampler, vTextureCoord);\n    \n    if (wipe.b < progress) {\n        color = texture(bgSampler, vTextureCoord);\n    } else {\n        color = texture(uSampler, vTextureCoord);\n    }\n}", "import frag from \"./texturewipe.frag\";\nimport { CustomFilter } from '../CustomFilter';\nimport { createColorTexture } from '../../utils';\n\ntype TextureWipeUniforms = {\n  progress: number;\n  wipeSampler: PIXI.Texture;\n  bgSampler: PIXI.Texture;\n}\n\n\nconst transparentTexture = createColorTexture(new PIXI.Color(\"#00000000\"));\n\nexport class TextureWipeFilter extends CustomFilter<TextureWipeUniforms> {\n\n  constructor(wipeSampler: PIXI.Texture, bgSampler?: PIXI.Texture) {\n    const uniforms: TextureWipeUniforms = {\n      progress: 0,\n      wipeSampler,\n      bgSampler: bgSampler ?? transparentTexture\n    }\n\n    super(undefined, frag, uniforms);\n  }\n}", "precision highp float;\n\nuniform sampler2D uSampler;\nin vec2 vTextureCoord;\nout vec4 color;\n\nuniform float progress;\nuniform sampler2D bgColor;\n\nvoid main() {\n    color = mix(texture(uSampler, vTextureCoord), texture(bgColor, vTextureCoord), progress);\n}", "import { coerceMacro, coerceScene } from \"./coercion\";\nimport { InvalidMacroError, InvalidSceneError } from \"./errors\";\nimport { LinearWipeFilter, BilinearWipeFilter, DiamondTransitionFilter, FadeTransitionFilter, ClockWipeFilter, FireDissolveFilter, RadialWipeFilter, SpotlightWipeFilter, TextureSwapFilter } from \"./filters\";\nimport { activateScene, cleanupTransition, hideLoadingBar, hideTransitionCover, setupTransition, showLoadingBar } from \"./transitionUtils\";\nimport { BilinearDirection, ClockDirection, RadialDirection, WipeDirection } from \"./types\";\nimport { createColorTexture } from \"./utils\";\n\n\nexport class TransitionChain {\n  #scene: Scene;\n  #sequence: ((container: PIXI.Container) => Promise<void>)[] = [];\n  #sounds: Sound[] = [];\n\n  public call(func: (container: PIXI.Container) => Promise<void>): this {\n    this.#sequence.push(func);\n    return this;\n  }\n\n  /**\n   * Executes a {@link Macro}\n   * @param {string} id \n   */\n  public macro(id: string): this\n  /**\n   * Executes a {@link Macro}\n   * @param {string} name \n   */\n  public macro(name: string): this\n  /**\n   * Executes a {@link Macro}\n   * @param {string} uuid \n   */\n  public macro(uuid: string): this\n  /**\n   * Executes a {@link Macro}\n   * @param {Macro} macro {@link Macro}\n   */\n  public macro(macro: Macro): this\n  public macro(arg: unknown): this {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n    const macro = coerceMacro(arg as any);\n    if (!macro) throw new InvalidMacroError(typeof arg === \"string\" ? arg : \"[Object object]\");\n    this.#sequence.push(async () => {\n      const res = macro.execute() as unknown;\n      if (res instanceof Promise) await res;\n    });\n    return this;\n  }\n\n  /**\n   * Causes the sequence to wait the specified amount of time before continuing.\n   * @param {number} duration Amount of time to wait, in milliseconds\n   * @returns \n   */\n  public wait(duration: number): this {\n    this.#sequence.push(() => new Promise(resolve => {\n      setTimeout(resolve, duration);\n    }));\n\n    return this;\n  }\n\n  public linearWipe(direction: WipeDirection, duration: number = 2000, bg?: PIXI.TextureSource | PIXI.ColorSource): this {\n    const wipe = new LinearWipeFilter(direction, bg ?? createColorTexture(\"transparent\").baseTexture)\n    this.#sequence.push(async container => {\n      if (Array.isArray(container.filters)) container.filters.push(wipe);\n      else container.filters = [wipe];\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      await TweenMax.to(wipe.uniforms, { progress: 1, duration: duration / 1000 });\n      return;\n    });\n    return this;\n  }\n\n  public bilinearWipe(direction: BilinearDirection, radial: RadialDirection, duration: number = 2000, bg: PIXI.TextureSource | PIXI.ColorSource = \"transparent\"): this {\n    const filter = new BilinearWipeFilter(direction, radial, bg);\n    this.#sequence.push(async container => {\n      if (Array.isArray(container.filters)) container.filters.push(filter);\n      else container.filters = [filter];\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      await TweenMax.to(filter.uniforms, { progress: 1, duration: duration / 1000 });\n      return;\n    })\n    return this;\n  }\n\n  public async execute() {\n    const container = await setupTransition();\n    hideLoadingBar();\n    await activateScene(this.#scene);\n    showLoadingBar();\n    hideTransitionCover();\n    for (const step of this.#sequence) {\n      await step(container)\n    }\n\n    for (const sound of this.#sounds) sound.stop();\n    cleanupTransition(container);\n  }\n\n\n  public diamondWipe(size: number, duration: number = 2000, bg: PIXI.TextureSource | PIXI.ColorSource = \"transparent\"): this {\n    const filter = new DiamondTransitionFilter(size, bg);\n    this.#sequence.push(async container => {\n      if (Array.isArray(container.filters)) container.filters.push(filter);\n      else container.filters = [filter];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      await TweenMax.to(filter.uniforms, { progress: 1, duration: duration / 1000 });\n      return;\n    });\n    return this;\n  }\n\n  public fade(duration: number, bg: PIXI.TextureSource | PIXI.ColorSource = \"transparent\"): this {\n    const filter = new FadeTransitionFilter(bg);\n    this.#sequence.push(async container => {\n      if (Array.isArray(container.filters)) container.filters.push(filter);\n      else container.filters = [filter];\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      await TweenMax.to(filter.uniforms, { progress: 1, duration: duration / 1000 });\n      return;\n    });\n    return this;\n  }\n\n  public clockWipe(clockDirection: ClockDirection, direction: WipeDirection, duration: number = 2000, bg: PIXI.TextureSource | PIXI.ColorSource = \"transparent\"): this {\n    const filter = new ClockWipeFilter(clockDirection, direction, bg);\n    this.#sequence.push(async container => {\n      if (Array.isArray(container.filters)) container.filters.push(filter);\n      else container.filters = [filter];\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      await TweenMax.to(filter.uniforms, { progress: 1, duration: duration / 1000 });\n      return;\n    })\n\n    return this;\n  }\n\n  public burn(duration: number = 1000, texture: PIXI.TextureSource): this {\n    const filter = new FireDissolveFilter(texture);\n    this.#sequence.push(async container => {\n      if (Array.isArray(container.filters)) container.filters.push(filter);\n      else container.filters = [filter];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      await TweenMax.to(filter.uniforms, { integrity: 0, duration: duration / 1000 });\n    })\n    return this;\n  }\n\n  public sound(file: string, loop: boolean = false): this {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    (foundry as any).audio.AudioHelper.preloadSound(file);\n    this.#sequence.push(async () => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const sound = await (foundry as any).audio.AudioHelper.play({ src: file, volume: 1, autoplay: true, loop }, true) as Sound;\n      this.#sounds.push(sound);\n    });\n\n    return this;\n  }\n\n\n  public video(file: string): this {\n    this.#sequence.push(async container => {\n\n      const texture: PIXI.Texture = await PIXI.Assets.load(file);\n      const resource: PIXI.VideoResource = texture.baseTexture.resource as PIXI.VideoResource;\n      const source = resource.source;\n\n      return new Promise<void>((resolve, reject) => {\n\n        const swapFilter = new TextureSwapFilter(texture.baseTexture);\n\n\n        if (Array.isArray(container.filters)) container.filters.push(swapFilter);\n        else container.filters = [swapFilter];\n\n        source.addEventListener(\"ended\", () => {\n          // swapFilter.destroy();\n          // chromaFilter.destroy();\n          resolve();\n        });\n\n        source.addEventListener(\"error\", e => {\n          // swapFilter.destroy();\n          // chromaFilter.destroy();\n          reject(e.error as Error);\n        });\n        void source.play();\n      })\n    });\n\n    return this;\n  }\n\n  public radial(direction: RadialDirection, duration: number = 1000, bg: PIXI.TextureSource | PIXI.ColorSource = \"transparent\"): this {\n    const filter = new RadialWipeFilter(direction, bg);\n    this.#sequence.push(async container => {\n      if (Array.isArray(container.filters)) container.filters.push(filter);\n      else container.filters = [filter];\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      await TweenMax.to(filter.uniforms, { progress: 1, duration: duration / 1000 });\n    });\n    return this;\n  }\n\n  public spotlight(direction: WipeDirection, radial: RadialDirection, duration: number = 1000, bg: PIXI.ColorSource | PIXI.TextureSource = \"transparent\"): this {\n    const filter = new SpotlightWipeFilter(direction, radial, bg);\n    this.#sequence.push(async container => {\n      if (Array.isArray(container.filters)) container.filters.push(filter);\n      else container.filters = [filter];\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      await TweenMax.to(filter.uniforms, { progress: 1, duration: duration / 1000 });\n    });\n    return this;\n  }\n\n  constructor(id: string)\n  constructor(name: string)\n  constructor(uuid: string)\n  constructor(sccene: Scene)\n  constructor(arg: unknown) {\n    const scene = coerceScene(arg);\n    if (!(scene instanceof Scene)) throw new InvalidSceneError(typeof arg === \"string\" ? arg : \"[Object object]\");\n    this.#scene = scene;\n  }\n}", "import frag from \"./fadetransition.frag\";\nimport { CustomFilter } from '../CustomFilter';\nimport { createColorTexture } from '../../utils';\nimport { coerceTexture } from \"../../coercion\";\nimport { CUSTOM_HOOKS } from \"../../constants\";\nimport { TransitionChain } from \"../../TransitionChain\";\n\ntype FadeTransitionUniforms = {\n  progress: number;\n  bgColor: PIXI.Texture;\n}\n\nHooks.once(CUSTOM_HOOKS.INITIALIZE, () => {\n  BattleTransitions.Presets = {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n    fade: (scene: string | Scene, duration: number = 1000) => new TransitionChain(scene as any).fade(duration).execute(),\n\n    ...(BattleTransitions.Presets ?? {})\n  }\n})\n\nexport class FadeTransitionFilter extends CustomFilter<FadeTransitionUniforms> {\n\n  constructor(bg: PIXI.ColorSource | PIXI.TextureSource = \"transparent\") {\n    const bgTexture = coerceTexture(bg) ?? createColorTexture(\"transparent\");\n    super(undefined, frag, {\n      bgColor: bgTexture,\n      progress: 0\n    });\n  }\n}", "import { coerceTexture } from '../../coercion';\nimport { CUSTOM_HOOKS } from '../../constants';\nimport { InvalidDirectionError } from '../../errors';\nimport { TransitionChain } from '../../TransitionChain';\nimport { BilinearDirection, RadialDirection, WipeDirection } from '../../types';\nimport { createColorTexture } from '../../utils';\nimport { TextureWipeFilter } from '../TextureWipe/TextureWipeFilter';\n\nconst TextureHash = {\n  horizontal: {\n    inside: \"bilinear-horizontal-inside.webp\",\n    outside: \"bilinear-horizontal-outside.webp\"\n  },\n  vertical: {\n    inside: \"bilinear-vertical-inside.webp\",\n    outside: \"bilinear-vertical-outside.webp\"\n  },\n  topleft: {\n    inside: \"bilinear-top-left-inside.webp\",\n    outside: \"bilinear-top-right-outside.webp\"\n  },\n  topright: {\n    inside: \"bilinear-top-right-inside.webp\",\n    outside: \"bilinear-top-right-outside.webp\"\n  },\n  bottomleft: {\n    inside: \"bilinear-top-right-inside.webp\",\n    outside: \"bilinear-top-right-outside.webp\"\n  },\n  bottomright: {\n    inside: \"bilinear-top-left-inside.webp\",\n    outside: \"bilinear-top-right-outside.webp\"\n  }\n}\n\nHooks.once(CUSTOM_HOOKS.INITIALIZE, () => {\n  BattleTransitions.Presets = {\n    bilinearHorizontalInside: generatePreset(\"horizontal\", \"inside\"),\n    bilinearHorizontalOutside: generatePreset(\"horizontal\", \"outside\"),\n    bilinearVerticalInside: generatePreset(\"vertical\", \"inside\"),\n    bilinearVerticalOutside: generatePreset(\"vertical\", \"outside\"),\n    bilinearTopLeftInisde: generatePreset(\"topleft\", \"inside\"),\n    bilinearTopLeftOutside: generatePreset(\"topleft\", \"outside\"),\n    bilinearTopRightInside: generatePreset(\"topright\", \"inside\"),\n    bilinearTopRightOUtside: generatePreset(\"topright\", \"outside\"),\n\n    ...(BattleTransitions.Presets ?? {})\n  }\n});\n\nfunction generatePreset(direction: BilinearDirection, radial: RadialDirection): (scene: string | Scene, duration: number) => Promise<void> {\n  return (scene: string | Scene, duration: number = 1000) => new TransitionChain(scene as any).bilinearWipe(direction, radial, duration).execute();\n}\n\nexport class BilinearWipeFilter extends TextureWipeFilter {\n\n  constructor(direction: BilinearDirection, radial: RadialDirection, bg: PIXI.TextureSource | PIXI.ColorSource) {\n    const bgTexture = coerceTexture(bg) ?? createColorTexture(\"transparent\");\n    const texture = TextureHash[direction]?.[radial];\n    if (!texture) throw new InvalidDirectionError(`${direction}-${radial}`);\n\n    const wipeTexture = PIXI.Texture.from(`/modules/${__MODULE_ID__}/assets/wipes/${texture}`);\n    super(wipeTexture, bgTexture);\n  }\n}", "import { coerceTexture } from '../../coercion';\nimport { CUSTOM_HOOKS } from '../../constants';\nimport { InvalidDirectionError } from '../../errors';\nimport { TransitionChain } from '../../TransitionChain';\nimport { WipeDirection } from '../../types';\nimport { createColorTexture } from '../../utils';\nimport { TextureWipeFilter } from '../TextureWipe/TextureWipeFilter';\n\nconst TextureHash = {\n  left: \"linear-left.webp\",\n  right: \"linear-right.webp\",\n  top: \"linear-top.webp\",\n  bottom: \"linear-bottom.webp\",\n  topleft: \"linear-top-left.webp\",\n  topright: \"linear-top-right.webp\",\n  bottomleft: \"linear-bottom-left.webp\",\n  bottomright: \"linear-bottom-right.webp\"\n};\n\nfunction generatePreset(direction: WipeDirection): (scene: string | Scene, duration: number) => Promise<void> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n  return (scene: string | Scene, duration: number) => new TransitionChain(scene as any).linearWipe(direction, duration).execute();\n}\n\nHooks.once(CUSTOM_HOOKS.INITIALIZE, () => {\n  BattleTransitions.Presets = {\n    linearLeft: generatePreset(\"left\"),\n    linearRight: generatePreset(\"right\"),\n    linearTop: generatePreset(\"top\"),\n    linearBottom: generatePreset(\"bottom\"),\n    linearTopLeft: generatePreset(\"topleft\"),\n    linearTopRight: generatePreset(\"topright\"),\n    linearBottomLeft: generatePreset(\"bottomleft\"),\n    linearBottomRight: generatePreset(\"bottomright\"),\n\n    ...(BattleTransitions.Presets ?? {})\n  }\n})\n\nexport class LinearWipeFilter extends TextureWipeFilter {\n\n  constructor(direction: WipeDirection, bg: PIXI.TextureSource | PIXI.ColorSource) {\n    const bgTexture = coerceTexture(bg) ?? createColorTexture(\"transparent\");\n    const texture = TextureHash[direction];\n    if (!texture) throw new InvalidDirectionError(direction);\n\n    const wipeTexture = PIXI.Texture.from(`/modules/${__MODULE_ID__}/assets/wipes/${texture}`);\n    super(wipeTexture, bgTexture);\n  }\n}", "import { coerceTexture } from \"../../coercion\";\nimport { CUSTOM_HOOKS } from \"../../constants\";\nimport { InvalidDirectionError } from \"../../errors\";\nimport { TransitionChain } from \"../../TransitionChain\";\nimport { ClockDirection, WipeDirection } from \"../../types\";\nimport { createColorTexture } from \"../../utils\";\nimport { TextureWipeFilter } from \"../TextureWipe/TextureWipeFilter\";\n\nconst TextureHash = {\n  clockwise: {\n    top: \"clockwise-top.webp\",\n    left: \"clockwise-left.webp\",\n    right: \"clockwise-right.webp\",\n    bottom: \"clockwise-bottom.webp\"\n  },\n  counterclockwise: {\n    top: \"anticlockwise-top.webp\",\n    left: \"anticlockwise-left.webp\",\n    right: \"anticlockwise-right.webp\",\n    bottom: \"anticlockwise-bottom.webp\"\n  }\n}\n\nHooks.once(CUSTOM_HOOKS.INITIALIZE, () => {\n  BattleTransitions.Presets = {\n    clockwiseTop: generatePreset(\"clockwise\", \"top\"),\n    clockwiseRight: generatePreset(\"clockwise\", \"right\"),\n    clockwiseBottom: generatePreset(\"clockwise\", \"bottom\"),\n    clockwiseLeft: generatePreset(\"clockwise\", \"left\"),\n    counterClockwiseTop: generatePreset(\"counterclockwise\", \"top\"),\n    counterClockwiseRight: generatePreset(\"counterclockwise\", \"right\"),\n    counterClockwiseBottom: generatePreset(\"counterclockwise\", \"bottom\"),\n    counterClockwiseLeft: generatePreset(\"counterclockwise\", \"left\"),\n\n    ...(BattleTransitions.Presets ?? {})\n  }\n})\n\nfunction generatePreset(clockDirection: ClockDirection, direction: WipeDirection): (scene: string | Scene, duration: number) => Promise<void> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n  return (scene: string | Scene, duration: number = 1000) => new TransitionChain(scene as any).clockWipe(clockDirection, direction, duration).execute();\n}\n\n\nexport class ClockWipeFilter extends TextureWipeFilter {\n\n  constructor(clockDirection: ClockDirection, direction: WipeDirection, bg: PIXI.ColorSource | PIXI.TextureSource) {\n    const bgTexture = coerceTexture(bg) ?? createColorTexture(\"transparent\");\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const texture = TextureHash[clockDirection]?.[direction];\n    if (!texture) throw new InvalidDirectionError(`${clockDirection}-${direction}`);\n    const wipeTexture = PIXI.Texture.from(`/modules/${__MODULE_ID__}/assets/wipes/${texture}`);\n    super(wipeTexture, bgTexture);\n  }\n}\n", "import { RadialDirection, WipeDirection } from '../../types';\nimport { createColorTexture } from '../../utils';\nimport { coerceTexture } from \"../../coercion\";\nimport { TextureWipeFilter } from '../TextureWipe/TextureWipeFilter';\nimport { InvalidDirectionError } from '../../errors';\nimport { TransitionChain } from '../../TransitionChain';\nimport { CUSTOM_HOOKS } from '../../constants';\n\nconst TextureHash = {\n  left: {\n    inside: \"spotlight-left-inside.webp\",\n    outside: \"spotlight-right-outside.webp\"\n  },\n  top: {\n    inside: \"spotlight-top-inside.webp\",\n    outside: \"spotlight-top-outside.webp\"\n  },\n  right: {\n    inside: \"spotlight-right-inside.webp\",\n    outside: \"spotlight-right-outside.webp\"\n  },\n  bottom: {\n    inside: \"spotlight-bottom-inside.webp\",\n    outside: \"spotlgiht-bottom-outside.webp\"\n  }\n}\n\nfunction generatePreset(direction: WipeDirection, radial: RadialDirection): (scene: string | Scene, duration: number) => Promise<void> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n  return (scene: string | Scene, duration: number) => new TransitionChain(scene as any).spotlight(direction, radial, duration).execute();\n}\n\nHooks.once(CUSTOM_HOOKS.INITIALIZE, () => {\n\n  BattleTransitions.Presets = {\n    spotlightTopOutside: generatePreset(\"top\", \"outside\"),\n    spotlightRightOutside: generatePreset(\"right\", \"outside\"),\n    spotlightBottomOutside: generatePreset(\"bottom\", \"outside\"),\n    spotlightLeftOutside: generatePreset(\"left\", \"outside\"),\n\n    spotlightTopInside: generatePreset(\"top\", \"inside\"),\n    spotlightRightInside: generatePreset(\"right\", \"inside\"),\n    spotlightBottomInside: generatePreset(\"bottom\", \"inside\"),\n    spotlightLeftInside: generatePreset(\"left\", \"inside\"),\n\n    ...(BattleTransitions.Presets ?? {})\n  }\n})\n\nexport class SpotlightWipeFilter extends TextureWipeFilter {\n  constructor(direction: WipeDirection, radial: RadialDirection, bg: PIXI.TextureSource | PIXI.ColorSource = \"transparent\") {\n    const bgTexture = coerceTexture(bg) ?? createColorTexture(\"transparent\");\n    const texture = TextureHash[direction]?.[radial];\n    if (!texture) throw new InvalidDirectionError(`${direction}-${radial}`);\n    const wipeTexture = PIXI.Texture.from(`/modules/${__MODULE_ID__}/assets/wipes/${texture}`);\n    super(wipeTexture, bgTexture);\n  }\n}\n", "import { TextureWipeFilter } from '../TextureWipe/TextureWipeFilter';\nimport { RadialDirection } from \"../../types\";\nimport { coerceTexture } from \"../../coercion\";\nimport { createColorTexture } from \"../../utils\";\nimport { InvalidDirectionError } from '../../errors';\nimport { TransitionChain } from '../../TransitionChain';\nimport { CUSTOM_HOOKS } from '../../constants';\n\nconst TextureHash = {\n  inside: \"radial-inside.webp\",\n  outside: \"radial-outside.webp\"\n}\n\nfunction generatePreset(direction: RadialDirection): (scene: string | Scene, duration: number) => Promise<void> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n  return (scene: string | Scene, duration: number) => new TransitionChain(scene as any).radial(direction, duration).execute();\n\n}\n\nHooks.once(CUSTOM_HOOKS.INITIALIZE, () => {\n  BattleTransitions.Presets = {\n    radialInside: generatePreset(\"inside\"),\n    radialOutside: generatePreset(\"outside\"),\n\n    ...(BattleTransitions.Presets ?? {})\n  }\n})\n\n\nexport class RadialWipeFilter extends TextureWipeFilter {\n  constructor(direction: RadialDirection, bg: PIXI.TextureSource | PIXI.ColorSource) {\n    const bgTexture = coerceTexture(bg) ?? createColorTexture(\"transparent\");\n    const texture = TextureHash[direction];\n    if (!texture) throw new InvalidDirectionError(direction);\n    const wipeTexture = PIXI.Texture.from(`/modules/${__MODULE_ID__}/assets/wipes/${texture}`);\n    super(wipeTexture, bgTexture);\n  }\n}\n", "precision highp float;\n\nuniform sampler2D uSampler;\nin vec2 vTextureCoord;\nout vec4 color;\n\nuniform vec4 chromaKey;\nuniform vec2 maskRange;\nuniform sampler2D bgSampler;\nuniform vec2 iResolution;\n\nmat4 RGBtoYUV = mat4(0.257,  0.439, -0.148, 0.0,\n                     0.504, -0.368, -0.291, 0.0,\n                     0.098, -0.071,  0.439, 0.0,\n                     0.0625, 0.500,  0.500, 1.0 );\n\n\n//compute color distance in the UV (CbCr, PbPr) plane\nfloat colorClose(vec3 yuv, vec3 keyYuv, vec2 tol)\n{\n    float tmp = sqrt(pow(keyYuv.g - yuv.g, 2.0) + pow(keyYuv.b - yuv.b, 2.0));\n    if (tmp < tol.x)\n      return 0.0;\n   \telse if (tmp < tol.y)\n      return (tmp - tol.x)/(tol.y - tol.x);\n   \telse\n      return 1.0;\n}\n\nvoid main() {\n  vec2 fragPos = vTextureCoord.xy / iResolution.xy;\n  vec4 texColor0 = texture(uSampler, fragPos);\n  vec4 texColor1 = texture(bgSampler, fragPos);\n\n  vec4 keyYUV = RGBtoYUV * chromaKey;\n  vec4 yuv = RGBtoYUV * texColor0;\n\n  float mask = 1.0 - colorClose(yuv.rgb, keyYUV.rgb, maskRange);\n  color = max(texColor0 - mask * chromaKey, 0.0) + texColor1 * mask;\n}\n\n// precision highp float;\n\n// uniform sampler2D uSampler;\n// in vec2 vTextureCoord;\n// out vec4 color;\n\n// uniform vec4 keyRGBA;\n// uniform vec2 keyCC;\n// uniform vec2 range;\n// uniform vec2 iResolution;\n// uniform sampler2D bgSampler;\n\n// vec2 RGBToCC(vec4 rgba) {\n//     float Y = 0.299 * rgba.r + 0.587 * rgba.g + 0.114 * rgba.b;\n//     return vec2((rgba.b - Y) * 0.565, (rgba.r - Y) * 0.713);\n// }\n\n// void main() {\n//     vec4 src1Color = texture(uSampler, vTextureCoord);\n//     vec2 CC = RGBToCC(src1Color);\n//     float mask = sqrt(pow(keyCC.x - CC.x, 2.0) + pow(keyCC.y - CC.y, 2.0));\n//     mask = smoothstep(range.x, range.y, mask);\n//     if (mask == 0.0) {\n//         color = texture(bgSampler, vTextureCoord);\n//     }\n//     else if (mask == 1.0) {\n//         color = src1Color;\n//     }\n//     else {\n//         color = max(src1Color - (1.0 - mask) * keyRGBA, 0.0);\n//     }\n// }\n", "import { coerceTexture } from '../../coercion';\nimport { createColorTexture } from '../../utils';\nimport { CustomFilter } from '../CustomFilter';\nimport frag from \"./chromakey.frag\";\n\n// type ChromaKeyUniforms = {\n//   keyRGBA: [number, number, number, number],\n//   keyCC: [number, number],\n//   range: [number, number],\n//   iResolution: [number, number],\n//   bgSampler: PIXI.Texture\n// }\n\n/*\nuniform vec4 chromaKey;\nuniform vec2 maskRange;\nuniform sampler2D bgSampler;\nuniform vec2 iResolution;\n*/\n\ntype ChromaKeyUniforms = {\n  chromaKey: [number, number, number, number];\n  maskRange: [number, number];\n  bgSampler: PIXI.Texture;\n  iResolution: [number, number];\n}\n\n\nfunction RGBAToCC(r: number, g: number, b: number): [number, number] {\n  const y = 0.299 * r + 0.587 * g + 0.114 * b;\n  return [(b - y) * 0.565, (r - y) * 0.713];\n}\n\n\n\nexport class ChromaKeyFilter extends CustomFilter<ChromaKeyUniforms> {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  constructor(keyColor: PIXI.ColorSource = [0.05, 0.63, 0.14, 1], bg: PIXI.TextureSource | PIXI.ColorSource = \"transparent\") {\n    const color = new PIXI.Color(keyColor);\n    const bgSampler = coerceTexture(bg) ?? createColorTexture(\"transparent\");\n\n    const uniforms: ChromaKeyUniforms = {\n      // chromaKey: [color.red, color.green, color.blue, 1],\n      chromaKey: [color.red, color.green, color.blue, 1],\n      bgSampler,\n      maskRange: [.005, .26],\n      iResolution: [1, 1]\n    };\n\n    // const uniforms: ChromaKeyUniforms = {\n    //   // range: [0.11, 0.22],\n    //   range: [.11, .15],\n    //   keyRGBA: [color.red, color.green, color.blue, 1],\n    //   keyCC: RGBAToCC(color.red, color.green, color.blue),\n    //   iResolution: [window.innerWidth, window.innerHeight],\n    //   bgSampler\n    // };\n\n    super(undefined, frag, uniforms);\n  }\n}", "precision highp float;\n\nuniform sampler2D uSampler;\nin vec2 vTextureCoord;\nout vec4 color;\n\nuniform sampler2D uTexture;\n\nvoid main() {\n    color = texture(uTexture, vTextureCoord);\n}", "import { CustomFilter } from \"../CustomFilter\";\nimport { coerceTexture } from '../../coercion';\nimport { InvalidTextureError } from \"../../errors\";\nimport frag from \"./textureswap.frag\";\n\ntype TextureSwapUniforms = {\n  uTexture: PIXI.Texture\n};\n\n\nexport class TextureSwapFilter extends CustomFilter<TextureSwapUniforms> {\n  constructor(texture: PIXI.TextureSource | PIXI.ColorSource) {\n    const actual = coerceTexture(texture);\n    if (!actual) throw new InvalidTextureError();\n\n    super(undefined, frag, {\n      uTexture: actual\n    });\n  }\n}", "import { CustomFilter } from './CustomFilter';\nimport { FireDissolveFilter } from './FireDissolve/FireDissolveFilter';\nimport { DiamondTransitionFilter } from './DiamondTransition/DiamondTransitionFilter';\nimport { TextureWipeFilter } from './TextureWipe/TextureWipeFilter';\nimport { FadeTransitionFilter } from './FadeTransition/FadeTransitionFilter';\nimport { BilinearWipeFilter } from './BilinearWipe/BilinearWipeFilter';\nimport { LinearWipeFilter } from \"./LinearWipe/LinearWipeFilter\";\nimport { ClockWipeFilter } from './ClockWipe/ClockWipeFilter';\nimport { SpotlightWipeFilter } from './SpotlightWipe/SpotlightWipeFilter';\nimport { RadialWipeFilter } from './RadialWipe/RadialWipeFilter';\nimport { ChromaKeyFilter } from './ChromaKey/ChromaKeyFilter';\nimport { TextureSwapFilter } from './TextureSwap/TextureSwapFilter';\n\n\n\nexport {\n  CustomFilter,\n  FireDissolveFilter,\n  DiamondTransitionFilter,\n  TextureWipeFilter,\n  FadeTransitionFilter,\n  BilinearWipeFilter,\n  LinearWipeFilter,\n  ClockWipeFilter,\n  SpotlightWipeFilter,\n  RadialWipeFilter,\n  ChromaKeyFilter,\n  TextureSwapFilter\n}\n\nexport const filters = {\n  CustomFilter,\n  FireDissolveFilter,\n  DiamondTransitionFilter,\n  TextureWipeFilter,\n  FadeTransitionFilter,\n\n  LinearWipeFilter,\n  BilinearWipeFilter,\n  ClockWipeFilter,\n  SpotlightWipeFilter,\n  RadialWipeFilter,\n  ChromaKeyFilter,\n  TextureSwapFilter\n};\n", "import { cleanupTransition, transitionTo } from './transitionUtils';\nimport { createColorTexture, logImage } from './utils';\n\nimport { filters } from './filters';\n\n\nexport default {\n  transitionTo,\n  logImage,\n  createColorTexture,\n  cleanupTransition,\n\n  Filters: filters,\n  Presets: {},\n  Textures: {\n    Black: createColorTexture(\"#000000\"),\n    White: createColorTexture(\"#FFFFFF\"),\n    Transparent: createColorTexture(\"#00000000\"),\n\n    fromColor: createColorTexture\n  }\n};", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\nexport function registerHelpers() {\n  Handlebars.registerHelper(\"switch\", function (this: any, value, options) {\n    this._switch_value_ = value;\n    const html = options.fn(this);\n    delete this._switch_value_;\n    return html;\n  });\n\n  Handlebars.registerHelper(\"case\", function (this: any, value, options) {\n    if (value == this._switch_value_)\n      return options.fn(this);\n  })\n}\n\nexport async function registerTemplates() {\n\n\n  return loadTemplates([\n    `/modules/${__MODULE_ID__}/templates/scene-config.hbs`,\n    ...[\"add-step\",\n      \"fade-config\",\n      \"linearwipe-config\",\n      \"step-item\",\n    ].map(name => `/modules/${__MODULE_ID__}/templates/config/${name}.hbs`)\n  ]);\n}", "import { TransitionConfigHandler } from '../interfaces';\nimport { localize } from '../utils';\n\n\nexport interface FadeConfiguration {\n  duration: number;\n  background: string;\n  id: string;\n}\n\nexport class FadeConfigHandler implements TransitionConfigHandler<FadeConfiguration> {\n\n  public get key() { return \"fade\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.FADE\"; }\n\n  public readonly defaultSettings: FadeConfiguration = {\n    duration: 1000,\n    background: \"#00000000\",\n    id: \"\"\n  }\n\n\n  generateSummary(flag: FadeConfiguration): string {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    if (flag) return [localize(\"BATTLETRANSITIONS.FORMATTERS.MILLISECONDS\", { value: (flag as any).duration }), (flag as any).background].join(\"; \");\n    else return \"\";\n  }\n\n  renderTemplate(flag?: FadeConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/fade-config.hbs`, flag ?? {});\n  }\n\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): FadeConfiguration {\n\n\n    const form = $(html).find(\"form\").serializeArray();\n\n    const duration = form.find(elem => elem.name === \"duration\");\n    const background = form.find(elem => elem.name === \"background\");\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(duration ? { duration: parseFloat(duration.value) } : {}),\n      ...(background ? { background: background.value } : {}),\n      ...(id ? { id: id.value } : { id: foundry.utils.randomID() })\n    }\n  }\n\n}", "import { TransitionConfigHandler } from \"../interfaces\";\nimport { WipeDirection } from \"../types\";\n\nexport interface LinearWipeConfiguration {\n  direction: WipeDirection;\n  duration: number;\n  background: string;\n  id?: string;\n}\n\nexport class LinearWipeConfigHandler implements TransitionConfigHandler<LinearWipeConfiguration> {\n\n  public readonly defaultSettings: LinearWipeConfiguration = {\n    duration: 1000,\n    background: \"#00000000\",\n    direction: \"left\"\n  };\n\n  generateSummary(flag?: LinearWipeConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    };\n\n    return [settings.direction, settings.duration, settings.background].join(\"; \");\n  }\n\n  renderTemplate(flag?: LinearWipeConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/linearwipe-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag,\n      directionSelect: {\n        \"top\": \"BATTLETRANSITIONS.DIRECTIONS.TOP\",\n        \"left\": \"BATTLETRANSITIONS.DIRECTIONS.LEFT\",\n        \"right\": \"BATTLETRANSITIONS.DIRECTIONS.RIGHT\",\n        \"bottom\": \"BATTLETRANSITIONS.DIRECTIONS.BOTTOM\",\n        \"topleft\": \"BATTLETRANSITIONS.DIRECTIONS.TOPLEFT\",\n        \"topright\": \"BATTLETRANSITIONS.DIRECTIONS.TOPRIGHT\",\n        \"bottomleft\": \"BATTLETRANSITIONS.DIRECTIONS.BOTTOMLEFT\",\n        \"bottomright\": \"BATTLETRANSITIONS.DIRECTIONS.BOTTOMRIGHT\"\n      }\n    });\n  }\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): LinearWipeConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n\n    const duration = form.find(elem => elem.name === \"duration\");\n    const background = form.find(elem => elem.name === \"background\");\n    const direction = form.find(elem => elem.name === \"direction\");\n\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(duration ? { duration: parseFloat(duration.value) } : {}),\n      ...(background ? { background: background.value } : {}),\n      ...(direction ? { direction: direction.value as WipeDirection } : {}),\n      id: id ? id.value : foundry.utils.randomID()\n    }\n  }\n  public get key() { return \"linear-wipe\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.LINEARWIPE\"; }\n\n\n}", "import { TransitionConfigHandler } from \"../interfaces\";\nimport { localize } from \"../utils\";\nimport { BilinearDirection, RadialDirection } from '../types';\n\nexport interface BilinearWipeConfiguration {\n  duration: number;\n  direction: BilinearDirection;\n  radial: RadialDirection;\n  background: string;\n  id?: string;\n}\n\nexport class BilinearWipeConfigHandler implements TransitionConfigHandler<BilinearWipeConfiguration> {\n  public get key() { return \"bilinear-wipe\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.BILINEARWIPE\"; }\n  public readonly defaultSettings: BilinearWipeConfiguration = {\n    duration: 1000,\n    direction: \"horizontal\",\n    radial: \"inside\",\n    background: \"#00000000\",\n  }\n\n  public generateSummary(flag?: BilinearWipeConfiguration): string {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    if (flag) return [localize(\"BATTLETRANSITIONS.FORMATTERS.MILLISECONDS\", { value: (flag as any).duration }), flag.direction, flag.radial, (flag as any).background].join(\"; \");\n    else return \"\";\n  }\n\n  public renderTemplate(flag?: BilinearWipeConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/bilinear-wipe-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag,\n      directionSelect: {\n        \"horizontal\": \"BATTLETRANSITIONS.DIRECTIONS.HORIZONTAL\",\n        \"vertical\": \"BATTLETRANSITIONS.DIRECTIONS.VERTICAL\",\n        \"topleft\": \"BATTLETRANSITIONS.DIRECTIONS.TOPLEFT\",\n        \"topright\": \"BATTLETRANSITIONS.DIRECTIONS.TOPRIGHT\"\n      },\n      radialSelect: {\n        \"inside\": \"BATTLETRANSITIONS.DIRECTIONS.INSIDE\",\n        \"outside\": \"BATTLETRANSITIONS.DIRECTIONS.OUTSIDE\"\n      }\n    });\n  }\n\n  public createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): BilinearWipeConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n\n    const duration = form.find(elem => elem.name === \"duration\");\n    const background = form.find(elem => elem.name === \"background\");\n    const direction = form.find(elem => elem.name === \"direction\");\n    const radial = form.find(elem => elem.name === \"radial\");\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(duration ? { duration: parseFloat(duration.value) } : {}),\n      ...(background ? { background: background.value } : {}),\n      ...(direction ? { direction: direction.value as BilinearDirection } : {}),\n      ...(radial ? { radial: radial.value as RadialDirection } : {}),\n      ...(id ? { id: id.value } : { id: foundry.utils.randomID() })\n    };\n  }\n}\n", "import { TransitionConfigHandler } from \"../interfaces\";\n\nexport interface ChromaKeyConfiguration {\n  keyColor: string;\n  background: string;\n\n  id?: string;\n}\n\n\nexport class ChromaKeyConfigHandler implements TransitionConfigHandler<ChromaKeyConfiguration> {\n\n  public get key() { return \"chromakey\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.CHROMAKEY\"; }\n\n  public readonly defaultSettings: ChromaKeyConfiguration = {\n    keyColor: \"#00b140\",\n    background: \"#00000000\",\n  };\n\n  public generateSummary(flag?: ChromaKeyConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    };\n    return [settings.keyColor, settings.background].join(\"; \");\n  }\n\n  public async renderTemplate(flag?: ChromaKeyConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/chromakey-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag\n    })\n  }\n\n  public createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): ChromaKeyConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n    const keyColor = form.find(elem => elem.name === \"key-color\");\n    const background = form.find(elem => elem.name === \"background\");\n\n    return {\n      ...this.defaultSettings,\n      ...(keyColor ? { keyColor: keyColor.value } : {}),\n      ...(background ? { background: background.value } : {})\n    };\n  }\n}\n", "import { TransitionConfigHandler } from \"../interfaces\";\nimport { localize } from \"../utils\";\nimport { ClockDirection, WipeDirection } from \"../types\";\n\nexport interface ClockWipeConfiguration {\n  clockdirection: ClockDirection;\n  direction: WipeDirection,\n  duration: number;\n  background: string;\n  id?: string;\n}\n\nexport class ClockWipeConfigHandler implements TransitionConfigHandler<ClockWipeConfiguration> {\n  public get key() { return \"clockwipe\" }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.CLOCKWIPE\"; }\n\n  public readonly defaultSettings: ClockWipeConfiguration = {\n    direction: \"top\",\n    clockdirection: \"clockwise\",\n    duration: 1000,\n    background: \"#00000000\"\n  }\n\n  public generateSummary(flag?: ClockWipeConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    };\n\n    return [settings.clockdirection, settings.direction, localize(\"BATTLETRANSITIONS.FORMATTERS.MILLISECONDS\", { value: settings.duration }), settings.background].join(\"; \")\n  }\n\n  async renderTemplate(flag?: ClockWipeConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/clockwipe-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag,\n      directionSelect: {\n        top: \"BATTLETRANSITIONS.DIRECTIONS.TOP\",\n        left: \"BATTLETRANSITIONS.DIRECTIONS.LEFT\",\n        right: \"BATTLETRANSITIONS.DIRECTIONS.RIGHT\",\n        bottom: \"BATTLETRANSITIONS.DIRECTIONS.BOTTOM\"\n      },\n      clockDirectionSelect: {\n        clockwise: \"BATTLETRANSITIONS.DIRECTIONS.CLOCKWISE\",\n        counterclockwise: \"BATTLETRANSITIONS.DIRECTIONS.COUNTERCLOCKWISE\"\n      }\n    });\n  }\n\n  public createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): ClockWipeConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n\n    const duration = form.find(elem => elem.name === \"duration\");\n    const direction = form.find(elem => elem.name === \"direction\");\n    const background = form.find(elem => elem.name === \"background\");\n    const clockDirection = form.find(elem => elem.name === \"clockdirection\");\n\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(duration ? { duration: parseFloat(duration.value) } : {}),\n      ...(direction ? { direction: direction.value as WipeDirection } : {}),\n      ...(background ? { background: background.value } : {}),\n      ...(clockDirection ? { clockdirection: clockDirection.value as ClockDirection } : {}),\n      id: id ? id.value : foundry.utils.randomID()\n    }\n  }\n\n\n}\n", "import { TransitionConfigHandler } from '../interfaces';\nimport { localize } from '../utils';\n\nexport interface DiamondTransitionConfiguration {\n  size: number;\n  background: string;\n  duration: number;\n  id?: string;\n}\n\n\nexport class DiamondTransitionConfigHandler implements TransitionConfigHandler<DiamondTransitionConfiguration> {\n  public get key() { return \"diamond\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.DIAMOND\"; }\n\n  public readonly defaultSettings: DiamondTransitionConfiguration = {\n    duration: 1000,\n    size: 40,\n    background: \"#00000000\"\n  }\n\n  generateSummary(flag?: DiamondTransitionConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    };\n    return [\n      localize(\"BATTLETRANSITIONS.FORMATTERS.MILLISECONDS\", { value: settings.duration }),\n      localize(\"BATTLETRANSITIONS.FORMATTERS.PIXELS\", { value: settings.size }),\n      settings.background\n    ].join(\"; \")\n  }\n\n\n  public async renderTemplate(flag?: DiamondTransitionConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/diamond-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag\n    });\n  }\n\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): DiamondTransitionConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n\n    const duration = form.find(elem => elem.name === \"duration\");\n    const size = form.find(elem => elem.name === \"size\");\n    const background = form.find(elem => elem.name === \"background\");\n\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(duration ? { duration: parseFloat(duration.value) } : {}),\n      ...(size ? { size: parseFloat(size.value) } : {}),\n      ...(background ? { background: background.value } : {}),\n      id: id ? id.value : foundry.utils.randomID()\n    }\n\n  }\n\n}\n", "import { TransitionConfigHandler } from '../interfaces';\nimport { localize } from '../utils';\n\nexport interface FireDissolveConfiguration {\n  duration: number;\n  background: string;\n  burnSize: number;\n\n  id?: string;\n}\n\nexport class FireDissolveConfigHandler implements TransitionConfigHandler<FireDissolveConfiguration> {\n  public get key() { return \"firedissolve\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.FIREDISSOLVE\"; }\n\n  public readonly defaultSettings = {\n    duration: 1000,\n    background: \"#00000000\",\n    burnSize: 1.3\n  }\n\n  generateSummary(flag?: FireDissolveConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    };\n    return [\n      localize(\"BATTLETRANSITIONS.FORMATTERS.MILLISECONDS\", { value: settings.duration }),\n      settings.background\n    ].join(\"; \");\n  }\n\n  async renderTemplate(flag?: FireDissolveConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/fire-dissolve-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag\n    });\n  }\n\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): FireDissolveConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n\n    const duration = form.find(elem => elem.name === \"duration\");\n    const background = form.find(elem => elem.name === \"background\");\n    const burnSize = form.find(elem => elem.name === \"burnsize\");\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(duration ? { duration: parseFloat(duration.value) } : {}),\n      ...(background ? { background: background.value } : {}),\n      ...(burnSize ? { burnSize: parseFloat(burnSize.value) } : {}),\n      id: id ? id.value : foundry.utils.randomID()\n    }\n  }\n}\n", "import { TransitionConfigHandler } from '../interfaces';\nimport { localize } from '../utils';\nimport { RadialDirection } from '../types';\n\nexport interface RadialWipeConfiguration {\n  duration: number;\n  background: string;\n  radial: RadialDirection;\n\n  id?: string;\n}\n\nexport class RadialWipeConfigHandler implements TransitionConfigHandler<RadialWipeConfiguration> {\n  public get key() { return \"radialwipe\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.RADIALWIPE\"; }\n\n  public readonly defaultSettings = {\n    duration: 1000,\n    background: \"#00000000\",\n    radial: \"inside\" as RadialDirection\n  }\n\n  generateSummary(flag?: RadialWipeConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    };\n\n    return [\n      localize(\"BATTLETRANSITIONS.FORMATTERS.MILLISECONDS\", { value: settings.duration }),\n      settings.radial,\n      settings.background\n    ].join(\"; \")\n  }\n\n  renderTemplate(flag?: RadialWipeConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/radial-wipe-config.hbs`, {\n      ...flag,\n      radialOptions: {\n        \"inside\": \"BATTLETRANSITIONS.DIRECTIONS.INSIDE\",\n        \"outside\": \"BATTLETRANSITIONS.DIRECTIONS.OUTSIDE\"\n      }\n    });\n  }\n\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): RadialWipeConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n\n    const duration = form.find(elem => elem.name === \"duration\");\n    const radial = form.find(elem => elem.name === \"radial\");\n    const background = form.find(elem => elem.name === \"background\");\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(background ? { background: background.value } : {}),\n      ...(duration ? { duration: parseFloat(duration.value) } : {}),\n      ...(radial ? { radial: radial.value as RadialDirection } : {}),\n      id: id ? id.value : foundry.utils.randomID()\n    }\n  }\n}\n\n", "import { TransitionConfigHandler } from '../interfaces';\nimport { localize } from '../utils';\nimport { RadialDirection, WipeDirection } from '../types';\n\n\nexport interface SpotlightWipeConfiguration {\n  duration: number;\n  direction: WipeDirection;\n  radial: RadialDirection;\n  background: string;\n  id?: string;\n}\n\nexport class SpotlightWipeConfigHandler implements TransitionConfigHandler<SpotlightWipeConfiguration> {\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.SPOTLIGHTWIPE\"; }\n  public get key() { return \"spotlightwipe\"; }\n\n  public readonly defaultSettings: SpotlightWipeConfiguration = {\n    duration: 1000,\n    background: \"#00000000\",\n    direction: \"top\",\n    radial: \"outside\"\n  }\n\n  generateSummary(flag?: SpotlightWipeConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    };\n    return [\n      localize(\"BATTLETRANSITIONS.FORMATTERS.MILLISECONDS\", { value: settings.duration }),\n      settings.direction,\n      settings.radial,\n      settings.background\n    ].join(\"; \")\n  }\n\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): SpotlightWipeConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n\n    const duration = form.find(elem => elem.name === \"duration\");\n    const direction = form.find(elem => elem.name === \"direction\");\n    const radial = form.find(elem => elem.name === \"radial\");\n    const background = form.find(elem => elem.name === \"background\");\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(duration ? { duration: parseFloat(duration.value) } : {}),\n      ...(background ? { background: background.value } : {}),\n      ...(direction ? { direction: direction.value as WipeDirection } : {}),\n      ...(radial ? { radial: radial.value as RadialDirection } : {}),\n      ...(id ? { id: id.value } : { id: foundry.utils.randomID() })\n    }\n  }\n\n  renderTemplate(flag?: SpotlightWipeConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/spotlight-wipe-config.hbs`, {\n      ...flag,\n      directionSelect: {\n        top: \"BATTLETRANSITIONS.DIRECTIONS.TOP\",\n        left: \"BATTLETRANSITIONS.DIRECTIONS.LEFT\",\n        right: \"BATTLETRANSITIONS.DIRECTIONS.RIGHT\",\n        bottom: \"BATTLETRANSITIONS.DIRECTIONS.BOTTOM\"\n      },\n      radialSelect: {\n        inside: \"BATTLETRANSITIONS.DIRECTIONS.INSIDE\",\n        outside: \"BATTLETRANSITIONS.DIRECTIONS.OUTSIDE\"\n      }\n    })\n  }\n\n}\n", "import { TransitionConfigHandler } from \"../interfaces\";\n\n\nexport interface TextureSwapConfiguration {\n  texture: string;\n  id?: string;\n}\n\nexport class TextureSwapConfigHandler implements TransitionConfigHandler<TextureSwapConfiguration> {\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.TEXTURESWAP\"; }\n  public get key() { return \"textureswap\"; }\n\n  public readonly defaultSettings: TextureSwapConfiguration = {\n    texture: \"\"\n  }\n\n  generateSummary(flag?: TextureSwapConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    }\n    return [settings.texture.split(\"/\").slice(-1)].join(\"; \");\n  }\n\n  renderTemplate(flag?: TextureSwapConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/texture-swap-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag\n    });\n  }\n\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): TextureSwapConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n\n    const id = form.find(elem => elem.name === \"id\");\n    const texture = $(html).find(\"form #texture\").val() as string ?? \"\";\n\n\n    return {\n      ...this.defaultSettings,\n      texture,\n      id: id ? id.value : foundry.utils.randomID()\n    }\n  }\n}\n", "import { TransitionConfigHandler } from \"../interfaces\";\nimport { localize } from \"../utils\";\n\nexport interface WaitConfiguration {\n  duration: number;\n  id?: string;\n}\n\nexport class WaitConfigHandler implements TransitionConfigHandler<WaitConfiguration> {\n  public get key() { return \"wait\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.WAIT\"; }\n\n  public readonly defaultSettings = { duration: 1000 };\n\n  generateSummary(flag?: WaitConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    };\n    return localize(\"BATTLETRANSITIONS.FORMATTERS.MILLISECONDS\", { value: settings.duration });\n  }\n\n  renderTemplate(flag?: WaitConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/wait-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag\n    });\n  }\n\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): WaitConfiguration {\n    const form = $(html).find(\"form\").serializeArray()\n    const duration = form.find(elem => elem.name === \"duration\");\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(duration ? { duration: parseFloat(duration.value) } : {}),\n      id: id ? id.value : foundry.utils.randomID()\n    }\n  }\n}\n", "import { TransitionConfigHandler } from \"../interfaces\";\nimport { localize } from \"../utils\";\n\nexport interface SoundConfiguration {\n  file: string;\n  volume: number;\n  id?: string;\n}\n\nexport class SoundConfigHandler implements TransitionConfigHandler<SoundConfiguration> {\n  public get key() { return \"sound\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.SOUND\"; }\n\n  public readonly defaultSettings = {\n    file: \"\",\n    volume: 1\n  };\n\n  generateSummary(flag?: SoundConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    }\n    return [\n      settings.file.split(\"/\").slice(-1),\n      localize(\"BATTLETRANSITIONS.FORMATTERS.PERCENT\", { value: settings.volume * 100 })\n    ].join(\"; \")\n  }\n\n  renderTemplate(flag?: SoundConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/sound-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag\n    });\n  }\n\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): SoundConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n    const file = $(html).find(\"form #file\").val() as string ?? \"\";\n    const volume = form.find(elem => elem.name === \"volume\");\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(file ? { file } : {}),\n      ...(volume ? { volume: parseFloat(volume.value) / 100 } : {}),\n      id: id ? id.value : foundry.utils.randomID()\n    }\n  }\n}\n", "import { TransitionConfigHandler } from \"../interfaces\";\nimport { localize } from \"../utils\";\n\nexport interface VideoConfiguration {\n  file: string;\n  background: string;\n  volume: number;\n  id?: string;\n}\n\n\nexport class VideoConfigHandler implements TransitionConfigHandler<VideoConfiguration> {\n  public get key() { return \"video\"; }\n  public get name() { return \"BATTLETRANSITIONS.TRANSITIONTYPES.VIDEO\"; }\n\n  public readonly defaultSettings = {\n    file: \"\",\n    background: \"#00000000\",\n    volume: 1\n  };\n\n  generateSummary(flag?: VideoConfiguration): string {\n    const settings = {\n      ...this.defaultSettings,\n      ...flag\n    }\n    return [\n      settings.file.split(\"/\").splice(-1),\n      localize(\"BATTLETRANSITIONS.FORMATTERS.PERCENT\", { value: settings.volume * 100 })\n    ].join(\"; \")\n  }\n\n  renderTemplate(flag?: VideoConfiguration): Promise<string> {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/video-config.hbs`, {\n      ...this.defaultSettings,\n      ...flag,\n      volume: (flag?.volume !== undefined ? flag.volume : this.defaultSettings.volume) * 100\n    });\n  }\n\n  createFlagFromHTML(html: HTMLElement | JQuery<HTMLElement>): VideoConfiguration {\n    const form = $(html).find(\"form\").serializeArray();\n\n\n    const file = $(html).find(\"form #file\").val() as string ?? \"\";\n    const volume = $(html).find(\"form #volume input[type='number']\").val() as number;\n    const id = form.find(elem => elem.name === \"id\");\n\n    return {\n      ...this.defaultSettings,\n      ...(file ? { file } : {}),\n      ...(volume ? { volume: volume / 100 } : {}),\n      id: id ? id.value : foundry.utils.randomID()\n    }\n\n  }\n}\n", "import { InvalidElementError, InvalidTransitionError } from \"../errors\";\nimport { TransitionConfigHandler } from \"../interfaces\";\nimport { localize, shouldUseAppV2 } from \"../utils\";\nimport { FadeConfigHandler } from './FadeConfigHandler';\nimport { LinearWipeConfigHandler } from './LinearWipeConfigHandler';\nimport { BilinearWipeConfigHandler } from './BilinearWipeConfigHandler';\nimport { ChromaKeyConfigHandler } from './ChromaKeyConfigHandler';\nimport { ClockWipeConfigHandler } from './ClockWipeConfigHandler';\nimport { DiamondTransitionConfigHandler } from './DiamondTransitionConfigHandler';\nimport { FireDissolveConfigHandler } from './FireDissolveConfigHandler';\nimport { RadialWipeConfigHandler } from './RadialWipeConfigHandler';\nimport { SpotlightWipeConfigHandler } from './SpotlightWipeConfigHandler';\nimport { TextureSwapConfigHandler } from './TextureSwapConfigHandler';\nimport { WaitConfigHandler } from './WaitConfigHandler';\nimport { SoundConfigHandler } from './SoundConfigHandler';\nimport { VideoConfigHandler } from './VideoConfigHandler';\n\n\nconst CONFIG_HANDLERS: TransitionConfigHandler<object>[] = [\n  new FadeConfigHandler(),\n  new LinearWipeConfigHandler(),\n  new BilinearWipeConfigHandler(),\n  new ChromaKeyConfigHandler(),\n  new ClockWipeConfigHandler(),\n  new DiamondTransitionConfigHandler(),\n  new FireDissolveConfigHandler(),\n  new RadialWipeConfigHandler(),\n  new SpotlightWipeConfigHandler(),\n  new TextureSwapConfigHandler(),\n  new WaitConfigHandler(),\n  new SoundConfigHandler(),\n  new VideoConfigHandler()\n];\n\n\nexport class ConfigurationHandler {\n  #dialog: Application;\n  #scene: Scene;\n  #addStepDialog: Application | null = null;\n\n  private stepKey = \"steps\";\n  private configKey = \"config\";\n  private tabName: string = \"battle-transitions\";\n  private icon: string[] = [\"fas\", \"crossed-swords\", \"fa-fw\", \"icon\"];\n\n  public get appId() { return this.#dialog.appId; }\n  public get rootElement() { return $(this.#dialog.element); }\n  public get addStepDialogElement() { return this.#addStepDialog ? $(this.#addStepDialog.element) : null; }\n\n  private updateConfiguration() {\n\n    const flags: unknown[] = [];\n\n    // Generate steps\n    this.rootElement.find(\".step-config-item[data-transition-type]\").each((i, element) => {\n      const flagData = $(element).data(\"flag\") as unknown;\n      const transitionType = $(element).data(\"transition-type\") as unknown;\n\n      if (!transitionType || typeof transitionType !== \"string\" || typeof flagData !== \"object\") throw new InvalidTransitionError(\"\");\n\n      flags.push({\n        ...(flagData),\n        type: transitionType\n      });\n    });\n\n    // void (this.#scene as any).setFlag(__MODULE_ID__, this.stepKey, flags);\n\n    const container = this.rootElement.find(`[data-tab=\"${__MODULE_ID__}\"]`);\n\n    const config = {\n      autoTrigger: container.find(\"input#auto-trigger\").is(\":checked\")\n    }\n\n    void Promise.all([\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      (this.#scene as any).setFlag(__MODULE_ID__, this.stepKey, flags),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      (this.#scene as any).setFlag(__MODULE_ID__, this.configKey, config)\n    ]);\n\n  }\n\n  private addEventListeners() {\n\n    // Add step button handler\n    this.rootElement.find(\"button[data-action='add-step']\").on(\"click\", this.onAddStep.bind(this));\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    (this.rootElement.find(\"#transition-step-list\") as any).sortable({\n      handle: \".drag-handle\",\n      containment: \"parent\",\n      axis: \"y\"\n    });\n\n    // Save changes button hook\n    this.rootElement.find(\"button[type='submit']\").on(\"click\", () => {\n      this.updateConfiguration();\n    });\n\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    ColorPicker.install();\n  }\n\n  private onAddStep(e: JQuery.ClickEvent) {\n    e.preventDefault();\n    void ((shouldUseAppV2() && foundry.applications.api.DialogV2) ? this.addStepDialogV2() : this.addStepDialog());\n  }\n\n  private resizeDialog() {\n    // console.log(\"Active tab:\", this.rootElement.find(\".item.active[data-tab]\")[0]);\n    const activeTab = this.rootElement.find(\".item.active[data-tab]\").data(\"tab\") as string;\n    if (activeTab === this.tabName) {\n      this.#dialog.activateTab(\"basic\");\n      this.#dialog.activateTab(this.tabName);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private addStepEventListeners(element: JQuery<HTMLElement>, config: object = {}) {\n    element.find(\"[data-action='remove']\").on(\"click\", () => {\n      const key = element.data(\"transition-type\") as string ?? \"\"\n      const handler = CONFIG_HANDLERS.find(elem => elem.key === key);\n      if (!handler) throw new InvalidTransitionError(key);\n      if (shouldUseAppV2() && foundry.applications.api.DialogV2) {\n        void foundry.applications.api.DialogV2.confirm({\n          content: localize(\"BATTLETRANSITIONS.SCENECONFIG.REMOVECONFIRM\", { name: localize(handler.name) }),\n\n        }).then(value => {\n          if (value) {\n            element.remove();\n            this.resizeDialog();\n          }\n        })\n      } else {\n        void Dialog.confirm({\n          content: localize(\"BATTLETRANSITIONS.SCENECONFIG.REMOVECONFIRM\", { name: localize(handler.name) }),\n        }).then(value => {\n          if (value) {\n            element.remove();\n            this.resizeDialog();\n          }\n        })\n          ;\n      }\n    });\n\n    element.find(\"[data-action='configure']\").on(\"click\", () => {\n      const key = element.data(\"transition-type\") as string ?? \"\";\n      const handler = CONFIG_HANDLERS.find(elem => elem.key === key);\n      if (!handler) throw new InvalidTransitionError(key);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const flag = element.data(\"flag\") ?? handler.defaultSettings;\n\n      void this.configureStep(key, flag as object);\n    })\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private addConfigureStepEventListeners(html: JQuery<HTMLElement>, flag: object = {}) {\n    html.find(\"input[type='text'],input[type='number']\").on(\"focus\", e => {\n      (e.currentTarget as HTMLInputElement).select();\n    })\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    ColorPicker.install();\n  }\n\n  private async configureStep(key: string, flag: object = {}) {\n    const handler = CONFIG_HANDLERS.find(item => item.key === key);\n    if (!handler) throw new InvalidTransitionError(key);\n\n    const content = await handler.renderTemplate(flag);\n\n    if (shouldUseAppV2() && foundry.applications.api.DialogV2) {\n      void foundry.applications.api.DialogV2.wait({\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        window: ({ title: localize(\"BATTLETRANSITIONS.SCENECONFIG.EDITSTEPDIALOG.TITLE\", { name: localize(handler.name) }) } as any),\n        content,\n        render: (e, dialog) => {\n          this.addConfigureStepEventListeners($(dialog), flag);\n        },\n        buttons: [\n          {\n            label: \"<i class='fas fa-times'></i> \" + localize(\"BATTLETRANSITIONS.DIALOGS.BUTTONS.CANCEL\"),\n            action: \"cancel\"\n          },\n          {\n            label: \"<i class='fas fa-check'></i> \" + localize(\"BATTLETRANSITIONS.DIALOGS.BUTTONS.OK\"),\n            action: \"ok\",\n            default: true,\n            // eslint-disable-next-line @typescript-eslint/require-await\n            callback: async (e, button, dialog): Promise<void> => {\n              const flag = handler.createFlagFromHTML($(dialog));\n              void this.addUpdateTransitionStep(key, flag);\n            }\n          }\n        ]\n      });\n\n    } else {\n      await Dialog.wait({\n        title: localize(\"BATTLETRANSITIONS.SCENECONFIG.EDITSTEPDIALOG.TITLE\", { name: localize(handler.name) }),\n        content,\n        render: html => { this.addConfigureStepEventListeners(html, flag); },\n        default: 'ok',\n        buttons: {\n          cancel: {\n            icon: \"<i class='fas fa-times'></i>\",\n            label: localize(\"BATTLETRANSITIONS.DIALOGS.BUTTONS.CANCEL\")\n          },\n          ok: {\n            icon: \"<i class='fas fa-check'></i>\",\n            label: localize(\"BATTLETRANSITIONS.DIALOGS.BUTTONS.OK\"),\n            callback: html => {\n              const flag = handler.createFlagFromHTML(html);\n              void this.addUpdateTransitionStep(key, flag);\n            }\n          }\n        }\n      })\n    }\n  }\n\n\n\n\n  private async addUpdateTransitionStep(key: string, config: object = {}) {\n    const handler = CONFIG_HANDLERS.find(item => item.key === key);\n    if (!handler) throw new InvalidTransitionError(key);\n\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    if (!(config as any).id) (config as any).id = foundry.utils.randomID();\n\n\n    const content = await renderTemplate(`/modules/${__MODULE_ID__}/templates/config/step-item.hbs`, {\n      ...(config ?? {}),\n      name: localize(handler?.name),\n\n      summary: handler.generateSummary(config),\n      type: key,\n      flag: JSON.stringify(config)\n    });\n\n    const appended = $(content);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    const extant = this.rootElement.find(`[data-id=\"${(config as any).id}\"]`);\n    if (extant.length) extant.replaceWith(appended);\n    else this.rootElement.find(\"#transition-step-list\").append(appended);\n\n    this.addStepEventListeners(appended, config);\n\n    this.resizeDialog();\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    ColorPicker.install();\n\n  }\n\n  private async getRenderedDialogTemplate() {\n    return renderTemplate(`/modules/${__MODULE_ID__}/templates/config/add-step.hbs`, {\n      transitionTypes: CONFIG_HANDLERS.map(handler => ({ key: handler.key, name: handler.name }))\n    });\n  }\n\n\n  private onAddStepDialogRender() {\n    if (!this.addStepDialogElement) throw new InvalidElementError();\n\n    this.addStepDialogElement.find(\"#add-step-form button[data-transition]\").on(\"click\", e => {\n      e.preventDefault();\n\n      const key = e.currentTarget.dataset.transition ?? \"\";\n      void this.#addStepDialog?.close();\n      const handler = CONFIG_HANDLERS.find(item => item.key === key);\n      if (!handler) throw new InvalidTransitionError(key);\n\n      void this.configureStep(key, handler.defaultSettings);\n      // void this.addTransitionStep(key, {});\n    })\n  }\n\n\n  private async addStepDialog(): Promise<void> {\n    // const content = await renderTemplate(`/modules/${__MODULE_ID__}/templates/config/add-step.hbs`, {});\n    const content = await this.getRenderedDialogTemplate();\n\n\n    const dialog = new Dialog({\n      title: localize(\"BATTLETRANSITIONS.SCENECONFIG.ADDSTEPDIALOG.TITLE\"),\n      content,\n      render: () => { this.onAddStepDialogRender(); },\n      buttons: {\n        cancel: {\n          label: localize(\"BATTLETRANSITIONS.DIALOGS.BUTTONS.CANCEL\"),\n          icon: \"<i class='fas fa-times'></i>\"\n        }\n      }\n    });\n    this.#addStepDialog = dialog;\n    dialog.render(true);\n\n  }\n\n  private async addStepDialogV2(): Promise<void> {\n    // const content = await renderTemplate(`/modules/${__MODULE_ID__}/templates/config/add-step.hbs`, {});\n    const content = await this.getRenderedDialogTemplate();\n\n\n    void foundry.applications.api.DialogV2.wait({\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n      window: ({ title: \"BATTLETRANSITIONS.SCENECONFIG.ADDSTEPDIALOG.TITLE\" } as any),\n      rejectClose: false,\n      render: (e: Event) => {\n        this.#addStepDialog = e.target as unknown as Application;\n        this.onAddStepDialogRender();\n      },\n      content,\n      buttons: [\n        {\n          label: \"<i class='fas fa-times'></i> \" + localize(\"BATTLETRANSITIONS.DIALOGS.BUTTONS.CANCEL\"),\n          action: \"cancel\"\n        }\n      ]\n    })\n      .then(action => { return action === \"cancel\" ? null : action; })\n      ;\n  }\n\n  private async inject() {\n    const navBar = this.rootElement.find(\"nav.sheet-tabs.tabs[data-group='main']\");\n    const link = document.createElement(\"a\");\n    link.classList.add(\"item\");\n    link.dataset.tab = this.tabName;\n    const icon = document.createElement(\"i\");\n    icon.classList.add(...this.icon);\n\n    link.appendChild(icon);\n    link.innerHTML += \" \" + localize(\"BATTLETRANSITIONS.SCENECONFIG.TAB\");\n\n    navBar.append(link);\n\n\n    const transitionConfig = this.#scene.getFlag(__MODULE_ID__, this.configKey);\n\n    const content = await renderTemplate(`/modules/${__MODULE_ID__}/templates/scene-config.hbs`, transitionConfig);\n    this.rootElement.find(\"footer.sheet-footer\").before(`<div class=\"tab\" data-group=\"main\" data-tab=\"${this.tabName}\">${content}</div>`);\n\n\n    const steps = this.#scene.getFlag(__MODULE_ID__, this.stepKey) as object[];\n    if (Array.isArray(steps)) {\n      for (const step of steps) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n        await this.addUpdateTransitionStep((step as any).type, step);\n      }\n    }\n\n\n    this.addEventListeners();\n  }\n\n  constructor(dialog: Application, scene: Scene) {\n    this.#dialog = dialog;\n    this.#scene = scene;\n    void this.inject();\n  }\n}", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { initializeCanvas } from './transitionUtils';\nimport BattleTransitions from \"./BattleTransitions\";\nimport { CUSTOM_HOOKS } from \"./constants\"\nimport { TransitionChain } from \"./TransitionChain\"\nimport { registerHelpers, registerTemplates } from \"./templates\"\nimport { ConfigurationHandler } from './config/ConfigurationHandler';\n\n// CONFIG.debug.hooks = true;\n\n(window as any).BattleTransitions = BattleTransitions;\n(window as any).BattleTransition = TransitionChain;\n\n\nHooks.once(\"canvasReady\", () => {\n  initializeCanvas();\n  Hooks.callAll(CUSTOM_HOOKS.INITIALIZE)\n})\n\nHooks.on(\"renderSceneConfig\", (app: Application) => {\n  new ConfigurationHandler(app, (app as any).object as Scene);\n});\n\n\nHooks.once(\"init\", async () => {\n  registerHelpers();\n  await registerTemplates();\n})\n\n"],
  "mappings": "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",
  "names": ["canvas", "transitionCover", "default_default", "default_default", "TextureHash", "generatePreset", "TextureHash", "generatePreset", "TextureHash", "generatePreset", "TextureHash", "generatePreset", "flag"]
}
